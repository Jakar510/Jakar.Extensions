<?xml version="1.0"?>

<doc>
	<assembly>
		<name>Jakar.Api</name>
	</assembly>
	<members>
		<member name="M:Jakar.Api.ApiServices`7.#ctor(System.String@,System.Type[])">
			<summary>
				appCenterServices: pass in the types you want to initialize, for example:  typeof(Microsoft.AppCenter.Analytics.Analytics), typeof(Microsoft.AppCenter.Crashes.Crashes)
			</summary>
			<param name="app_center_id"></param>
			<param name="appCenterServices"></param>
		</member>
		<member name="M:Jakar.Api.ApiServices`8.#ctor(System.String@,System.Type[])">
			<summary>
				appCenterServices: pass in the types you want to initialize, for example:  typeof(Microsoft.AppCenter.Analytics.Analytics), typeof(Microsoft.AppCenter.Crashes.Crashes)
			</summary>
			<param name="app_center_id"></param>
			<param name="appCenterServices"></param>
		</member>
		<member name="M:Jakar.Api.ApiServices`10.#ctor(System.String@,System.Type[])">
			<summary>
				appCenterServices: pass in the types you want to initialize, for example:  typeof(Microsoft.AppCenter.Analytics.Analytics), typeof(Microsoft.AppCenter.Crashes.Crashes)
			</summary>
			<param name="app_center_id"></param>
			<param name="appCenterServices"></param>
		</member>
		<member name="T:Jakar.Api.Commands`2">
			<summary>
				Will move to Xamarin.Community.Toolkit.AsyncCommand when the following issues are resolved, as Xamarin.Forms 5.x is broken on Android until then:
				[Bug] Linker issue with Xamarin.AndroidX.Core #13969: https://github.com/xamarin/Xamarin.Forms/issues/13969
				[Bug] package androidx.activity.contextaware does not exist. JAVAC0000: androidx.activity.contextaware.OnContextAvailableListener #14042: https://github.com/xamarin/Xamarin.Forms/issues/14042
				[Bug] android.content.res.Resources$NotFoundException: Unable to find resource ID #0xffffffff #13843: https://github.com/xamarin/Xamarin.Forms/issues/13843
				[Bug] https://developercommunity.visualstudio.com/t/package-androidxactivitycontextaware-does-not-exis/1376876?from=email
			</summary>
		</member>
		<member name="M:Jakar.Api.Prompts`2.InternalHandleException(System.Exception)">
			<summary>
				switch the type of exception to show what ever prompt you want
			</summary>
			<param name="e"></param>
			<returns></returns>
		</member>
		<member name="T:Jakar.Api.ResourceManager.BaseResourceDictionaryManager">
			<summary>
				Recommended class to use for the default implementation: <see cref="T:Jakar.Api.ResourceManager.KeyNames" />
				If you want to modify the implementation, override <see cref="!:GetKey&lt;TThemedKey&gt;" />
			</summary>
		</member>
		<member name="M:Jakar.Api.ResourceManager.ResourceDictionaryManager`2.GetKey(Xamarin.Forms.OSAppTheme@,`1@)">
			<summary>
				Default implementation uses <see cref="!:GetFullKey&lt;TThemedKey&gt;" />.
				You may override this to use <see cref="!:GetShortKey&lt;TThemedKey&gt;" /> or which ever pattern you wish.
			</summary>
			<typeparam name="TThemedKey"></typeparam>
			<param name="theme"></param>
			<param name="key"></param>
			<returns></returns>
		</member>
		<member name="M:Jakar.Api.ResourceManager.ResourceDictionaryManager`2.BindAppTheme(Xamarin.Forms.BindableObject@,Xamarin.Forms.BindableProperty@,`1@)">
			<summary>
				<see cref="T:Xamarin.Forms.Color" /> is used in <see cref="!:BindAppTheme&lt;TValue, TThemedKey&gt;" />
			</summary>
			<typeparam name="TThemedKey"></typeparam>
			<param name="bindable"></param>
			<param name="property"></param>
			<param name="key"></param>
		</member>
		<member name="M:Jakar.Api.ResourceManager.ResourceDictionaryManager`2.BindAppTheme``1(Xamarin.Forms.BindableObject@,Xamarin.Forms.BindableProperty@,`1@)">
			<summary>

			</summary>
			<typeparam name="TValue"></typeparam>
			<typeparam name="TThemedKey"></typeparam>
			<param name="bindable"></param>
			<param name="property"></param>
			<param name="key"></param>
		</member>
		<member name="M:Jakar.Api.ResourceManager.ResourceDictionaryManager.GetKey``1(Xamarin.Forms.OSAppTheme@,``0@)">
			<summary>
				Default implementation uses
				<see cref="M:Jakar.Api.ResourceManager.ResourceDictionaryManager.GetFullKey``1(Xamarin.Forms.OSAppTheme@,``0@)" />.
				You may override this to use
				<see cref="M:Jakar.Api.ResourceManager.ResourceDictionaryManager.GetShortKey``1(Xamarin.Forms.OSAppTheme@,``0@)" />
				or which ever pattern you wish.
			</summary>
			<typeparam name="TThemedKey"></typeparam>
			<param name="theme"></param>
			<param name="key"></param>
			<returns></returns>
		</member>
		<member name="M:Jakar.Api.ResourceManager.ResourceDictionaryManager.BindAppTheme``1(Xamarin.Forms.BindableObject@,Xamarin.Forms.BindableProperty@,``0@)">
			<summary>
				<see cref="T:Xamarin.Forms.Color" /> is used in
				<see cref="M:Jakar.Api.ResourceManager.ResourceDictionaryManager.BindAppTheme``2(Xamarin.Forms.BindableObject@,Xamarin.Forms.BindableProperty@,``1@)" />
			</summary>
			<typeparam name="TThemedKey"></typeparam>
			<param name="bindable"></param>
			<param name="property"></param>
			<param name="key"></param>
		</member>
		<member name="M:Jakar.Api.ResourceManager.ResourceDictionaryManager.BindAppTheme``2(Xamarin.Forms.BindableObject@,Xamarin.Forms.BindableProperty@,``1@)">
			<summary>

			</summary>
			<typeparam name="TValue"></typeparam>
			<typeparam name="TThemedKey"></typeparam>
			<param name="bindable"></param>
			<param name="property"></param>
			<param name="key"></param>
		</member>
	</members>
</doc>
