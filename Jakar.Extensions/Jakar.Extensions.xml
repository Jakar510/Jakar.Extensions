<?xml version="1.0"?>

<doc>
	<assembly>
		<name>Jakar.Extensions</name>
	</assembly>
	<members>
		<member name="M:Jakar.Extensions.IObservableObject.SetProperty``1(``0@,``0,System.Collections.Generic.EqualityComparer{``0},System.String)">
			<summary>
				<para> Checks the values with <paramref name="equalityComparer" /> . </para>
				Then calls <see cref="M:Jakar.Extensions.IObservableObject.OnPropertyChanging(System.String)" /> , sets the value, then calls
				<see cref="M:Jakar.Extensions.IObservableObject.OnPropertyChanged(System.String)" />
			</summary>
			<typeparam name="TValue"> </typeparam>
			<param name="backingStore"> </param>
			<param name="value"> </param>
			<param name="equalityComparer"> </param>
			<param name="propertyName"> </param>
			<returns>
				<para> Returns <see langword="false" /> if the values are equal, and therefore the <paramref name="backingStore" /> was not changed, otherwise <see langword="true" /> </para>
			</returns>
		</member>
		<member
			name="M:Jakar.Extensions.ObservableObjects.SetProperty``1(Jakar.Extensions.IObservableObject,``0@,``0,System.Func{System.Threading.Tasks.Task},System.Collections.Generic.EqualityComparer{``0},System.String)">
			<summary> "onChanged" only called if the backingStore value has changed. </summary>
		</member>
		<member
			name="M:Jakar.Extensions.ObservableObjects.SetProperty``1(Jakar.Extensions.IObservableObject,``0@,``0,System.Collections.Generic.EqualityComparer{``0},System.Func{System.Threading.Tasks.Task},System.String)">
			<summary> "onChanged" only called if the backingStore value has changed. </summary>
		</member>
		<member
			name="M:Jakar.Extensions.ObservableObjects.SetProperty``1(Jakar.Extensions.IObservableObject,``0@,``0,System.Func{``0,System.Threading.Tasks.Task},System.Collections.Generic.EqualityComparer{``0},System.String)">
			<summary> "onChanged" only called if the backingStore value has changed. </summary>
		</member>
		<member
			name="M:Jakar.Extensions.ObservableObjects.SetProperty``1(Jakar.Extensions.IObservableObject,``0@,``0,System.Windows.Input.ICommand,System.Collections.Generic.EqualityComparer{``0},System.String)">
			<summary> "onChanged" only called if the backingStore value has changed. </summary>
		</member>
		<member name="M:Jakar.Extensions.ObservableObjects.SetProperty``1(Jakar.Extensions.IObservableObject,``0@,``0,System.Action,System.Collections.Generic.EqualityComparer{``0},System.String)">
			<summary> "onChanged" only called if the backingStore value has changed. </summary>
		</member>
		<member name="M:Jakar.Extensions.ObservableObjects.SetProperty``1(Jakar.Extensions.IObservableObject,``0@,``0,System.Collections.Generic.EqualityComparer{``0},System.Action,System.String)">
			<summary> "onChanged" only called if the backingStore value has changed. </summary>
		</member>
		<member name="M:Jakar.Extensions.ObservableObjects.SetProperty``1(Jakar.Extensions.IObservableObject,``0@,``0,System.Action{``0},System.Collections.Generic.EqualityComparer{``0},System.String)">
			<summary> "onChanged" only called if the backingStore value has changed. </summary>
		</member>
		<member name="M:Jakar.Extensions.Buffer`1.Grow(System.UInt32)">
			<summary>
				Resize the internal buffer either by doubling current buffer size or by adding <paramref name="additionalRequestedCapacity" /> to <see cref="P:Jakar.Extensions.Buffer`1.Length" />
				whichever is greater.
			</summary>
			<param name="additionalRequestedCapacity"> the requested new size of the buffer. </param>
		</member>
		<member name="TValue:Jakar.Extensions.ConcurrentObservableCollection`1">
			<summary>
				<para>
					<see href="https://stackoverflow.com/a/54733415/9530917"> This type of CollectionView does not support changes to its SourceCollection from a thread different from the Dispatcher thread </see>
				</para>
				<para>
					<see href="https://stackoverflow.com/a/14602121/9530917"> How do I update an ObservableCollection via a worker thread? </see>
				</para>
			</summary>
			<typeparam name="TValue"> </typeparam>
		</member>
		<member name="TValue:Jakar.Extensions.FixedSizedDeque`1">
			<summary>
				<seealso href="https://stackoverflow.com/a/5852926/9530917" />
			</summary>
			<typeparam name="TValue"> </typeparam>
		</member>
		<member name="M:Jakar.Extensions.FixedSizedDeque`1.#ctor(System.Int32,System.Threading.Lock)">
			<summary>
				<seealso href="https://stackoverflow.com/a/5852926/9530917" />
			</summary>
			<typeparam name="TValue"> </typeparam>
		</member>
		<member name="TValue:Jakar.Extensions.FixedSizedQueue`1">
			<summary>
				<seealso href="https://stackoverflow.com/a/5852926/9530917" />
			</summary>
			<typeparam name="TValue"> </typeparam>
		</member>
		<member name="M:Jakar.Extensions.FixedSizedQueue`1.#ctor(System.Int32,System.Threading.Lock)">
			<summary>
				<seealso href="https://stackoverflow.com/a/5852926/9530917" />
			</summary>
			<typeparam name="TValue"> </typeparam>
		</member>
		<member name="TValue:Jakar.Extensions.ObservableCollection`1">
			<summary>
				<para>
					<see href="https://stackoverflow.com/a/54733415/9530917"> This type of CollectionView does not support changes to its SourceCollection from a thread different from the Dispatcher thread </see>
				</para>
				<para>
					<see href="https://stackoverflow.com/a/14602121/9530917"> How do I update an ObservableCollection via a worker thread? </see>
				</para>
			</summary>
			<typeparam name="TValue"> </typeparam>
		</member>
		<member name="M:Jakar.Extensions.ObservableCollection`1.#ctor(System.Collections.Generic.IComparer{`0},System.Int32)">
			<summary>
				<para>
					<see href="https://stackoverflow.com/a/54733415/9530917"> This type of CollectionView does not support changes to its SourceCollection from a thread different from the Dispatcher thread </see>
				</para>
				<para>
					<see href="https://stackoverflow.com/a/14602121/9530917"> How do I update an ObservableCollection via a worker thread? </see>
				</para>
			</summary>
			<typeparam name="TValue"> </typeparam>
		</member>
		<member name="M:Jakar.Extensions.ObservableCollection`1.AsSpan">
			<summary> Use With Caution -- Do not modify the <see cref="F:Jakar.Extensions.ObservableCollection`1.buffer" /> while the span is being used. </summary>
		</member>
		<member name="M:Jakar.Extensions.ObservableCollection`1.AsSpan(System.Int32,System.Int32)">
			<summary> Use With Caution -- Do not modify the <see cref="F:Jakar.Extensions.ObservableCollection`1.buffer" /> while the span is being used. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.UnitConverters">
			<summary>
				<see href="https://github.com/xamarin/Essentials/blob/main/Xamarin.Essentials/Types/UnitConverters.shared.cs" />
			</summary>
		</member>
		<member name="M:Jakar.Extensions.UnitConverters.InternationalFeetToMeters(System.Double)">
			<summary> International survey foot defined as exactly 0.3048 meters by convention in 1959. This is the most common modern foot measure. </summary>
		</member>
		<member name="M:Jakar.Extensions.UnitConverters.MetersToInternationalFeet(System.Double)">
			<summary> International survey foot defined as exactly 0.3048 meters by convention in 1959. This is the most common modern foot measure. </summary>
		</member>
		<member name="M:Jakar.Extensions.UnitConverters.MetersToUsSurveyFeet(System.Double)">
			<summary> Exactly 1200/3937 meters by definition. In decimal terms approximately 0.304 800 609 601 219 meters. Variation from the common international foot of exactly 0.3048 meters may only be considerable over large survey distances. </summary>
		</member>
		<member name="M:Jakar.Extensions.UnitConverters.UsSurveyFeetToMeters(System.Double)">
			<summary> Exactly 1200/3937 meters by definition. In decimal terms approximately 0.304 800 609 601 219 meters. Variation from the common international foot of exactly 0.3048 meters may only be considerable over large survey distances. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.AltitudeReference">
			<Docs>
				<summary> Indicates the altitude reference system to be used in defining a location. </summary>
				<remarks>
					<para> This enum is a copy of Windows.Devices.Geolocation.AltitudeReferenceSystem. </para>
				</remarks>
			</Docs>
		</member>
		<member name="F:Jakar.Extensions.AltitudeReference.Unspecified">
			<Docs>
				<summary> The altitude reference system was not specified. </summary>
			</Docs>
		</member>
		<member name="F:Jakar.Extensions.AltitudeReference.Terrain">
			<Docs>
				<summary> The altitude reference system is based on distance above terrain or ground level. </summary>
			</Docs>
		</member>
		<member name="F:Jakar.Extensions.AltitudeReference.Ellipsoid">
			<Docs>
				<summary> The altitude reference system is based on an ellipsoid (usually WGS84), which is a mathematical approximation of the shape of the Earth. </summary>
			</Docs>
		</member>
		<member name="F:Jakar.Extensions.AltitudeReference.Geoid">
			<Docs>
				<summary> The altitude reference system is based on the distance above sea level (parametrized by a so-called Geoid). </summary>
			</Docs>
		</member>
		<member name="F:Jakar.Extensions.AltitudeReference.Surface">
			<Docs>
				<summary> The altitude reference system is based on the distance above the tallest surface structures, such as buildings, trees, roads, etc., above terrain or ground level. </summary>
			</Docs>
		</member>
		<member name="TValue:Jakar.Extensions.DeviceType">
			<Docs>
				<summary> Various types of devices. </summary>
				<remarks />
			</Docs>
		</member>
		<member name="F:Jakar.Extensions.DeviceType.Unknown">
			<Docs>
				<summary> An unknown device type. </summary>
			</Docs>
		</member>
		<member name="F:Jakar.Extensions.DeviceType.Physical">
			<Docs>
				<summary> The device is a physical device, such as an iPhone, Android tablet or Windows desktop. </summary>
			</Docs>
		</member>
		<member name="F:Jakar.Extensions.DeviceType.Virtual">
			<Docs>
				<summary> The device is virtual, such as the iOS simulators, Android emulators or Windows emulators. </summary>
			</Docs>
		</member>
		<member name="TValue:Jakar.Extensions.DistanceUnit">
			<Docs>
				<summary> Distance Unit for use in conversion. </summary>
				<remarks />
			</Docs>
		</member>
		<member name="F:Jakar.Extensions.DistanceUnit.Kilometers">
			<Docs>
				<summary> Kilometers </summary>
			</Docs>
		</member>
		<member name="F:Jakar.Extensions.DistanceUnit.Miles">
			<Docs>
				<summary> Miles </summary>
			</Docs>
		</member>
		<member name="M:Jakar.Extensions.Enums.GetEnumNamedValues``2">
			<summary> Inspired by <seealso href="https://stackoverflow.com/a/8086788/9530917" /> </summary>
			<typeparam name="TEnum"> </typeparam>
			<typeparam name="TValue"> </typeparam>
			<returns> </returns>
		</member>
		<member name="TValue:Jakar.Extensions.Error">
			<summary> Inspired by https://github.com/amantinband/error-or/tree/main </summary>
			<param name="StatusCode"> </param>
			<param name="Type"> </param>
			<param name="Title"> </param>
			<param name="Detail"> </param>
			<param name="Instance"> </param>
			<param name="Errors"> </param>
		</member>
		<member name="M:Jakar.Extensions.Error.#ctor(System.Nullable{Jakar.Extensions.Status},System.String,System.String,System.String,System.String,Microsoft.Extensions.Primitives.StringValues)">
			<summary> Inspired by https://github.com/amantinband/error-or/tree/main </summary>
			<param name="StatusCode"> </param>
			<param name="Type"> </param>
			<param name="Title"> </param>
			<param name="Detail"> </param>
			<param name="Instance"> </param>
			<param name="Errors"> </param>
		</member>
		<member name="P:Jakar.Extensions.Error.Type">
			<summary> </summary>
		</member>
		<member name="P:Jakar.Extensions.Error.Title">
			<summary> </summary>
		</member>
		<member name="P:Jakar.Extensions.Error.Detail">
			<summary> </summary>
		</member>
		<member name="P:Jakar.Extensions.Error.Instance">
			<summary> </summary>
		</member>
		<member name="TValue:Jakar.Extensions.ErrorOrResult">
			<summary> Inspired by https://github.com/amantinband/error-or/tree/main </summary>
		</member>
		<member name="M:Jakar.Extensions.ErrorOrResult.#ctor(System.Nullable{System.Boolean},Jakar.Extensions.Errors)">
			<summary> Inspired by https://github.com/amantinband/error-or/tree/main </summary>
		</member>
		<member name="TValue:Jakar.Extensions.ErrorOrResult`1">
			<summary> Inspired by https://github.com/amantinband/error-or/tree/main </summary>
		</member>
		<member name="M:Jakar.Extensions.ErrorOrResult`1.#ctor(`0,Jakar.Extensions.Errors)">
			<summary> Inspired by https://github.com/amantinband/error-or/tree/main </summary>
		</member>
		<member name="TValue:Jakar.Extensions.ActivelyRefusedConnectionException">
			<summary> A web exception of unknown type occurred. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.ConnectFailureException">
			<summary> The remote service point could not be contacted at the transport level. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.ConnectionClosedException">
			<summary> The connection was prematurely closed. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.KeepAliveFailureException">
			<summary> The connection for a request that specifies the Keep-alive header was closed unexpectedly. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.MessageLengthLimitExceededException">
			<summary> A complete response was not received from the remote server. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.NameResolutionException">
			<summary> The name resolver service could not resolve the host name. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.PendingWebException">
			<summary> The remote service point could not be contacted at the transport level. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.PipelineFailureException">
			<summary> The remote service point could not be contacted at the transport level. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.ProtocolErrorException">
			<summary> A response was received from server but was indicated a protocol-level error. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.ReceiveFailureException">
			<summary> The request was canceled, the System.Net.WebRequest.Abort method was called, or an unclassifiable error occurred. This is the default value for System.Net.WebException.Status. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.SecureChannelFailureException">
			<summary> An error occurred while establishing a connection using SSL. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.SendFailureException">
			<summary> A complete response was not received from the remote server. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.ServerProtocolViolationException">
			<summary> The response was not a valid HTTP response. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.TrustFailureException">
			<summary> A Server certificate could not be verified. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.UnknownWebErrorException">
			<summary> A web exception of unknown type occurred. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.ArrayExtensions.ArrayAccessor`1">
			<summary>
				<see href="https://stackoverflow.com/a/17308019/9530917" />
			</summary>
		</member>
		<member name="TValue:Jakar.Extensions.CastTo`2">
			<summary> Class to cast <typeparamref name="TEnum" /> to <typeparamref name="TResult" /> </summary>
			<remarks>
				<see href="https://stackoverflow.com/a/23391746/9530917" />
			</remarks>
		</member>
		<member name="M:Jakar.Extensions.CastTo`2.From(`0)">
			<summary> Casts <typeparamref name="TEnum" /> to <typeparamref name="TResult" />. This does not cause boxing for value types. Useful in generic methods. </summary>
		</member>
		<member name="M:Jakar.Extensions.Guids.AsGuid(System.String)">
			<summary>
				<see href="https://www.youtube.com/watch?v=B2yOjLyEZk0"> Writing C# without allocating ANY memory </see>
			</summary>
			<param name="value"> </param>
			<returns> </returns>
		</member>
		<member name="M:Jakar.Extensions.Guids.AsGuid(System.ReadOnlySpan{System.Char}@)">
			<summary>
				<see href="https://www.youtube.com/watch?v=B2yOjLyEZk0"> Writing C# without allocating ANY memory </see>
			</summary>
			<param name="value"> </param>
			<returns> </returns>
		</member>
		<member name="M:Jakar.Extensions.Guids.ToBase64(System.Guid@)">
			<summary>
				<see href="https://www.youtube.com/watch?v=B2yOjLyEZk0"> Writing C# without allocating ANY memory </see>
			</summary>
			<param name="value"> </param>
			<returns> </returns>
		</member>
		<member name="M:Jakar.Extensions.Guids.AsSpan(System.Guid@,System.Span{System.Char}@)">
			<summary>
				<see href="https://www.youtube.com/watch?v=B2yOjLyEZk0"> Writing C# without allocating ANY memory </see>
			</summary>
			<param name="value"> </param>
			<param name="result"> </param>
			<returns> </returns>
		</member>
		<member name="M:Jakar.Extensions.Hashes.Hash_MD5(System.ReadOnlySpan{System.Byte}@)">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.MD5" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.Hash_MD5(System.ReadOnlySpan{System.Char}@,System.Text.Encoding)">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.MD5" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.Hash_MD5(System.String,System.Text.Encoding)">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.MD5" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.Hash_SHA1(System.ReadOnlySpan{System.Byte}@)">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA1" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.Hash_SHA1(System.ReadOnlySpan{System.Char}@,System.Text.Encoding)">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA1" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.Hash_SHA1(System.String,System.Text.Encoding)">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA1" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.Hash_SHA256(System.ReadOnlySpan{System.Byte}@)">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA256" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.Hash_SHA256(System.ReadOnlySpan{System.Char}@,System.Text.Encoding)">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA256" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.Hash_SHA256(System.String,System.Text.Encoding)">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA256" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.Hash_SHA384(System.ReadOnlySpan{System.Byte}@)">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA384" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.Hash_SHA384(System.ReadOnlySpan{System.Char}@,System.Text.Encoding)">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA384" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.Hash_SHA384(System.String,System.Text.Encoding)">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA384" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.Hash_SHA512(System.ReadOnlySpan{System.Byte}@)">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA512" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.Hash_SHA512(System.ReadOnlySpan{System.Char}@,System.Text.Encoding)">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA512" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.Hash_SHA512(System.String,System.Text.Encoding)">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA512" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.HashAsync_MD5(System.ReadOnlyMemory{System.Byte})">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.MD5" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.HashAsync_SHA1(System.ReadOnlyMemory{System.Byte})">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA1" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.HashAsync_SHA256(System.ReadOnlyMemory{System.Byte})">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA256" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.HashAsync_SHA384(System.ReadOnlyMemory{System.Byte})">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA384" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.HashAsync_SHA512(System.ReadOnlyMemory{System.Byte})">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA512" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.HashAsync_MD5(System.Byte[])">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.MD5" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.HashAsync_SHA1(System.Byte[])">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA1" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.HashAsync_SHA256(System.Byte[])">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA256" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.HashAsync_SHA384(System.Byte[])">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA384" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Hashes.HashAsync_SHA512(System.Byte[])">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA512" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Strings.IsBalanced(System.String,System.Collections.Generic.IReadOnlyDictionary{System.Char,System.Char})">
			<summary>
				<seealso href="https://www.codeproject.com/Tips/1175562/Check-for-Balanced-Parenthesis-in-a-String" />
				<para>
					<paramref name="bracketPairs" /> defaults to matching: <br />
					<list type="bullet">
						<item>
							<term> ( ) </term> <description> Parenthesis </description>
						</item>
						<item>
							<term> [ ] </term> <description> Square Brackets </description>
						</item>
						<item>
							<term> { } </term> <description> Curly Braces </description>
						</item>
					</list>
				</para>
				<para> Provide your own <c> IDictionary{char, char} </c> to <paramref name="bracketPairs" /> to customize the mapping. </para>
			</summary>
			<returns> <see langword="true" /> if balanced; otherwise <see langword="false" /> </returns>
		</member>
		<member name="M:Jakar.Extensions.Strings.IsBalanced(System.ReadOnlySpan{System.Char},System.Collections.Generic.IReadOnlyDictionary{System.Char,System.Char})">
			<summary>
				<seealso href="https://www.codeproject.com/Tips/1175562/Check-for-Balanced-Parenthesis-in-a-String" />
				<para>
					<paramref name="bracketPairs" /> defaults to matching: <br />
					<list type="bullet">
						<item>
							<term> ( ) </term> <description> Parenthesis </description>
						</item>
						<item>
							<term> [ ] </term> <description> Square Brackets </description>
						</item>
						<item>
							<term> { } </term> <description> Curly Braces </description>
						</item>
					</list>
				</para>
				<para> Provide your own <c> IDictionary{char, char} </c> to <paramref name="bracketPairs" /> to customize the mapping. </para>
			</summary>
			<returns> <see langword="true" /> if balanced; otherwise <see langword="false" /> </returns>
		</member>
		<member name="M:Jakar.Extensions.Strings.SplitOn(System.String,System.Char)">
			<summary>
				<para>
					<see href="https://www.meziantou.net/split-a-string-into-lines-without-allocation.htm" />
				</para>
			</summary>
			<param name="str"> </param>
			<param name="separator"> the <see cref="TValue:System.Char" /> to split on </param>
		</member>
		<member name="M:Jakar.Extensions.Strings.SplitOn(System.String)">
			<summary>
				<para>
					<see href="https://www.meziantou.net/split-a-string-into-lines-without-allocation.htm" />
				</para>
				Default chars <see cref="TValue:System.Char" /> to '\n' and '\r'
			</summary>
			<param name="str"> </param>
		</member>
		<member name="M:Jakar.Extensions.Strings.SplitOn(System.ReadOnlySpan{System.Char})">
			<summary>
				<para>
					<see href="https://www.meziantou.net/split-a-string-into-lines-without-allocation.htm" />
				</para>
				Default chars <see cref="TValue:System.Char" /> to '\n' and '\r'
			</summary>
			<param name="span"> </param>
		</member>
		<member name="M:Jakar.Extensions.Strings.Repeat(System.Char,System.Int32)">
			<summary>
				<seealso href="https://stackoverflow.com/a/48832421/9530917" />
			</summary>
			<param name="c"> </param>
			<param name="count"> </param>
			<returns>
				<see cref="TValue:System.String" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.Strings.Repeat(System.String,System.Int32)">
			<summary>
				<seealso href="https://stackoverflow.com/a/720915/9530917" />
			</summary>
			<param name="value"> </param>
			<param name="count"> </param>
			<returns>
				<see cref="TValue:System.String" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.Strings.ToSnakeCase(System.String)">
			<summary> inspired from <seealso href="https://stackoverflow.com/a/67332992/9530917" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Strings.ToSnakeCase(System.String,System.Globalization.CultureInfo)">
			<summary> inspired from <seealso href="https://stackoverflow.com/a/67332992/9530917" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Strings.Wrapper(System.String,System.Char,System.Int32)">
			<summary> Wraps a string in <paramref name="c"> </paramref> repeated <paramref name="padding"> </paramref> times. </summary>
			<param name="self"> </param>
			<param name="c"> </param>
			<param name="padding"> </param>
			<returns> </returns>
		</member>
		<member name="M:Jakar.Extensions.Tasks.Delay(System.TimeSpan,System.Threading.CancellationToken)">
			<summary> Creates a cancellable delay from the given <paramref name="delay" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.Tasks.WhenAll(System.Collections.Generic.IEnumerable{System.Threading.Tasks.ValueTask})">
			<summary>
				<see href="https://stackoverflow.com/a/63141544/9530917" />
			</summary>
			<exception cref="TValue:System.AggregateException"> </exception>
		</member>
		<member
			name="M:Jakar.Extensions.Tasks.WhenAll``1(System.Collections.Generic.IEnumerable{System.Func{System.Threading.CancellationToken,System.Threading.Tasks.ValueTask{``0}}},System.Threading.CancellationToken)">
			<summary>
				<see href="https://stackoverflow.com/a/63141544/9530917" />
			</summary>
			<exception cref="TValue:System.AggregateException"> </exception>
		</member>
		<member name="TValue:Jakar.Extensions.Validate">
			<summary> Validator Extensions </summary>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.Address">
			<remarks>
				Pattern:<br />
				<code>/(?:(?&lt;=^)|(?&lt;=[;:.,|][ ])|(?&lt;=[[('"]))(?:[)]?P\\.?O\\.?(?:(?i)[ ]?Box)?[ ]{0,2}(?&lt;PO&gt;\\d{1,5})[)]?|(?&lt;HouseNumber&gt;(?&gt;(?:(?&lt;NumberException&gt;(?:19[789]|20[0123])\\d)|\\d+?(?:[-\\\\\\/]\\d{1,3})?)(?=(?:[;,]|[-\\\\\\/]?[A-Za-z]\\d?)?\\s)))(?:(?&lt;DoorSide&gt;[-\\\\\\/]?[A-Za-z]\\d{0,2}))?,?\\s{0,2}(?&gt;(?:(?:^|[ ]{1,2})(?&lt;StreetPrefix&gt;AU|EI?|GR|H[AW]|JO|K|M[AEM]|N[EOW]?|O[HLMV]|RD|S[EW]?|TE|W)\\b)?)(?:(?:^|[ ]{1,2})(?&lt;StreetName&gt;(?:\\p{Lu}[-'\\p{L}]*?(?:\\.?[ ]{1,2}\\p{Lu}[-'\\p{L}]*?){0,8}?(?&gt;(?&lt;StreetNameIndicator&gt;(?i)BOULEVARD|PLAZA|ROAD|STR(?:ASSE|EET)|WA(?:LK|Y))?)|(?&lt;StreetOrdinal&gt;\\d{1,3}(?:[. ]?(?:°|st|[nr]d|th))))\\b))(?:(?:(?&gt;[ ]{1,2}(?i)(?&lt;StreetType&gt;A(?:C(?:CESS|RES)|LLEY|NX|PPROACH|R(?:CADE|TERY)|VE(?:NUE)?)|B(?:A(?:NK|SIN|Y)|CH|E(?:ACH|ND)|L(?:DG|VD)?|O(?:ULEVARD|ARDWALK|WL)|R(?:ACE|AE|EAK|IDGE|O(?:ADWAY|OK|W))?|YPASS)|C(?:A(?:NAL|USEWAY)|ENTRE(?:WAY)?|H(?:A(?:NN?EL|SE)?)?|I(?:R(?:C(?:LET?|U(?:IT|S)))?)?|L(?:B|OSE)?|O(?:MMON|NCOURSE|OP|PSE|R(?:[DK]|NER|S[OT])|UR(?:[VS]E|TValue(?:YARD)?)|VE)?|R(?:ES(?:CENT|TValue)?|IEF|OSS(?:ING)?)|TValue[RS]?|U(?:LDESAC|RVE)|V)|D(?:ALE|EVIATION|I[PV]|M|OWNS|R(?:IVE(?:WAY)?)?)|E(?:ASEMENT|DGE|LBOW|N(?:D|TRANCE)|S(?:PLANADE|TValue(?:ATE|S))|X(?:P(?:(?:(?:RESS)?WA)?Y)|TValue(?:ENSION)?))|F(?:AIRWAY|I(?:ELDS?|RETRAIL)|L(?:DS?|S)|O(?:LLOW|R(?:D|MATION))|R(?:D|EEWAY|ONT(?:AGE|ROAD)?))|G(?:A(?:P|RDENS?|TE(?:S|WAY)?)|L(?:ADE|EN)|R(?:ANGE|EEN|O(?:UND|V(?:ET?)?))?)|H(?:AVEN|BR|E(?:ATH|IGHTS)|I(?:GHWAY|LL)|L|OUSE|TS|UB|WY)|I(?:NTER(?:CHANGE)?|SLAND)|J(?:C|UNCTION)|K(?:EY|NOLL)|L(?:A(?:NE(?:WAY)?)?|DG|IN(?:E|K)|N|O(?:O(?:KOUT|P)|WER)?)|M(?:A(?:LL)?|DWS?|E(?:A(?:D|NDER)|WS)|L|NR|OT(?:EL|ORWAY))|NO(?:OK)?|O(?:L|UTLOOK|V(?:ERPASS)?)|P(?:A(?:R(?:ADE|K(?:LANDS|WAY)?)|SS|TH(?:WAY)?)?|DE|I(?:ER|[KN]E)|KW?Y|L(?:A(?:CE|ZA)|Z)?|O(?:CKET|INT|RT)|RO(?:MENADE|PERTY)|TValue|URSUIT)?|QUA(?:D(?:RANT)?|YS?)|R(?:A?(?:MBLE|NCH)|DG?|E(?:ACH|S(?:ERVE|TValue)|TValue(?:REAT|URN))|I(?:D(?:E|GE)|NG|S(?:E|ING))|O(?:AD(?:WAY)?|TARY|U(?:ND|TE)|W)|R|UN)|S(?:CH|(?:ER(?:VICE)?WAY)|IDING|LOPE|MT|P(?:PGS|UR)|Q(?:UARE)?|TValue(?:A(?:TE)?|CT|EPS|HY|PL|RAND|R(?:EET|IP)|TER)?|UBWAY)|TValue(?:ARN|CE|E(?:R(?:RACE)?)?|HRO(?:UGHWAY|WAY)|O(?:LLWAY|P|R)|R(?:A(?:CK|IL)|FY|L)?|URN)|UN(?:DERPASS|IV)?|V(?:AL(?:E|LEY)|I(?:EW|S(?:TA)?)?|L(?:GS?|Y))|W(?:A(?:L[KL](?:WAY)?|Y)|HARF|YND)|XING)\\b\\.?){1,2})??(?&gt;(?:[ ]{1,2}(?&lt;StreetSuffix&gt;E|N[EW]?|S[EW]?|W)\\b)?))(?:(?:^|[ ]{1,2}|[;,.]\\s{0,2}?)(?i)(?&lt;Apt&gt;(?:[#]?\\d{1,5}(?:[. ]{0,2}(?:°|st|[nr]d|th))?[;,. ]{0,2})?(?:(?:(?&gt;(?:A|DE)P(?:AR)?TValue(?:MENT)?S?|B(?:UI)?LD(?:IN)?G?|FL(?:(?:OO)?R)?|HA?NGS?R|LOT|PIER|RM|S(LIP|PC|TValue(E|OP))|TRLR|UNIT|(?=[#]))(?:[ ]{1,2}[#]?\\w{1,5})??|BA?SE?ME?N?TValue|FRO?NT|LO?BBY|LOWE?R|OF(?:C|FICE)|P\\.?H|REAR|SIDE|UPPR)){1,3}(?:[#;,. ]{1,3}(?:[-.]?[A-Z\\d]){1,3})?)[;,.]?)?)(?&lt;CityState&gt;[-;,.[(]?\\s{1,4}(?&lt;City&gt;[A-Z][A-Za-z]{1,16}[.]?(?:[- ](?:[A-Z][A-Za-z]{0,16}|[a-z]{1,3})(?:(?:[- ][A-Za-z]{1,17}){1,7})?)?)(?&lt;!\\s[ACDF-IK-PR-W][AC-EHI-PR-Z])[)]?(?&gt;(?&lt;State&gt;[-;,.]?\\s{1,4}[[(]?(?&lt;StateAbbr&gt;A[LKSZRAP]|C[AOT]|D[EC]|F[LM]|G[AU]|HI|I[ADLN]|K[SY]|LA|M[ADEHINOPST]|N[CDEHJMVY]|O[HKR]|P[ARW]|RI|S[CD]|TValue[NX]|UT|V[AIT]|W[AIVY])\\b[])]?|[-;,.]\\s{0,3}[ ][[(]?(?=[A-Z])(?&lt;StateName&gt;(?i)Ala(?:bam+a|[sz]ka)|Ari[sz]ona|Arkan[sz]as|California|Colorado|Con+ec?t+icut+|Delaw[ae]re?|Flori?da|Georgia|Haw+ai+|Idaho|Ill?inois|Indiana|Iowa|Kansas|Kentu[ck]+[iy]|Louis+ian+a|Ma(?:ine|r[iy]land|s+achuset+s)|Mi(?:chigan|n+es+ot+a|s+is+ip+i|s+ouri)|Montana|Ne(?:bra[sz]ka|vada|w[ ]?(?:Hamp?shire|Jerse[iy]|Mexico|York))|[NS](?:o[ru]th|[.])[ ]?(?:Carolina|Dakota)|Ohio|Oklahoma|Oregon|Pen+s[iy]lvan+[iy]a|Rh?oa?de?[ ]?Island|Ten+es+e+|Texas|Ut+ah?|Vermont|Washington|(?:W(?:est|[.])?[ ]?)?Virginia|Wi[sz]cou?nsin|W[iy]om[iy]+ng?)[])]?)?)(?(State)|(?:(?&lt;=[)])|(?! [A-Z]))))?(?&gt;(?:[-;,.\\s]{0,4}(?:^|[ ]{1,2})[[(]?(?&lt;ZipCode&gt;(?!0{5})\\d{5}(?:-\\d{4})?)[])]?)?)(?(State)|(?(ZipCode)|(?(City)(?!)|(?(PO)|(?(NumberException)(?!)|(?(StreetNameIndicator)|(?(StreetType)|(?(StreetPrefix)|(?!)))))))))(?=[]).?!'"\\s]|$)(?![ ]+\\d)/gmx</code>
				<br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Match '/'.<br />
					○ Match with 3 alternative expressions.<br />
					○ Zero-width positive lookbehind.<br />
					○ Match if at the beginning of the string.<br />
					○ Zero-width positive lookbehind.<br />
					○ Match ' ' right-to-left.<br />
					○ Match a character in the set [,.:;|] right-to-left.<br />
					○ Zero-width positive lookbehind.<br />
					○ Match a character in the set ["'([] right-to-left.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match ')' atomically, optionally.<br />
					○ Match a character in the set [Pp].<br />
					○ Match '.' atomically, optionally.<br />
					○ Match a character in the set [Oo].<br />
					○ Match '.' greedily, optionally.<br />
					○ Optional (greedy).<br />
					○ Match ' ' atomically, optionally.<br />
					○ Match a character in the set [Bb].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Xx].<br />
					○ Match ' ' atomically at most 2 times.<br />
					○ "PO" capture group.<br />
					○ Match a Unicode digit greedily at least 1 and at most 5 times.<br />
					○ Match ')' greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ "HouseNumber" capture group.<br />
					○ Atomic group.<br />
					○ Match with 2 alternative expressions.<br />
					○ "NumberException" capture group.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [7-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [0-3].<br />
					○ Match a Unicode digit.<br />
					○ Match a sequence of expressions.<br />
					○ Match a Unicode digit lazily at least once.<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [-/\\].<br />
					○ Match a Unicode digit greedily at least 1 and at most 3 times.<br />
					○ Zero-width positive lookahead.<br />
					○ Optional (greedy).<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a character in the set [,;].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [-/\\] atomically, optionally.<br />
					○ Match a character in the set [A-Za-z\u212A].<br />
					○ Match a Unicode digit greedily, optionally.<br />
					○ Match a whitespace character.<br />
					○ Optional (greedy).<br />
					○ "DoorSide" capture group.<br />
					○ Match a character in the set [-/\\] atomically, optionally.<br />
					○ Match a character in the set [A-Za-z\u212A].<br />
					○ Match a Unicode digit greedily at most 2 times.<br />
					○ Match ',' greedily, optionally.<br />
					○ Match a whitespace character greedily at most 2 times.<br />
					○ Optional (greedy).<br />
					○ Match with 2 alternative expressions.<br />
					○ Match if at the beginning of the string.<br />
					○ Match ' ' atomically at least 1 and at most 2 times.<br />
					○ "StreetPrefix" capture group.<br />
					○ Match with 13 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Uu].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ii] greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [AWaw].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Jj].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Mm].<br />
					○ Match a character in the set [AEMaem].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [EOWeow] greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [HLMVhlmv].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [EWew] greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ww].<br />
					○ Match if at a word boundary.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match if at the beginning of the string.<br />
					○ Match ' ' atomically at least 1 and at most 2 times.<br />
					○ "StreetName" capture group.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [\p{__InternalRegexIgnoreCase__}].<br />
					○ Match a character in the set ['-\p{L}] lazily any number of times.<br />
					○ Loop lazily at most 8 times.<br />
					○ Match '.' atomically, optionally.<br />
					○ Match ' ' atomically at least 1 and at most 2 times.<br />
					○ Match a character in the set [\p{__InternalRegexIgnoreCase__}].<br />
					○ Match a character in the set ['-\p{L}] lazily any number of times.<br />
					○ Optional (greedy).<br />
					○ "StreetNameIndicator" capture group.<br />
					○ Match with 5 alternative expressions, atomically.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Vv].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Zz].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Rr].<br />
					○ Match with 2 alternative expressions, atomically.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ss] exactly 2 times.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee] exactly 2 times.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Aa].<br />
					○ Match with 2 alternative expressions, atomically.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Match a character in the set [Yy].<br />
					○ "StreetOrdinal" capture group.<br />
					○ Match a Unicode digit atomically at least 1 and at most 3 times.<br />
					○ Match a character in the set [ .] atomically, optionally.<br />
					○ Match with 4 alternative expressions.<br />
					○ Match '°'.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Hh].<br />
					○ Match if at a word boundary.<br />
					○ Optional (lazy).<br />
					○ Loop greedily at least 1 and at most 2 times.<br />
					○ Atomic group.<br />
					○ Match ' ' atomically at least 1 and at most 2 times.<br />
					○ "StreetType" capture group.<br />
					○ Match with 24 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match with 6 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Cc].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ss] exactly 2 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll] exactly 2 times.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Xx].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Pp] exactly 2 times.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Hh].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Vv].<br />
					○ Match a character in the set [Ee].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Bb].<br />
					○ Match with 7 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Hh].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Hh].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll].<br />
					○ Optional (greedy).<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Gg].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Vv].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ll].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Optional (greedy).<br />
					○ Match with 4 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Yy].<br />
					○ Match a character in the set [Pp].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ss] exactly 2 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Cc].<br />
					○ Match with 10 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Ee].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Hh].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Aa].<br />
					○ Optional (greedy).<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Nn] atomically at least 1 and at most 2 times.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ii].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Rr].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Cc].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Tt] greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Uu].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll].<br />
					○ Optional (greedy).<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a character in the set [Bb].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Optional (greedy).<br />
					○ Match with 7 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Mm] exactly 2 times.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Pp].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Pp].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a character in the set [DKdk\u212A].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [OTot].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Rr].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [SVsv].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Tt].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Yy].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Vv].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ss].<br />
					○ Optional (greedy).<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ff].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Ss] exactly 2 times.<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Gg].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [RSrs] greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Uu].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Cc].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Vv].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Vv].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Dd].<br />
					○ Match with 6 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Vv].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [PVpv].<br />
					○ Match a character in the set [Mm].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Vv].<br />
					○ Match a character in the set [Ee].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match with 6 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Mm].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Bb].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Nn].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ss].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Pp].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Tt].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Xx].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Pp].<br />
					○ Optional (greedy).<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ss] exactly 2 times.<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Tt].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ff].<br />
					○ Match with 5 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ii].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ss] greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ss] greedily, optionally.<br />
					○ Match a character in the set [Ss].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll] exactly 2 times.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee] exactly 2 times.<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Tt].<br />
					○ Optional (greedy).<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Gg].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a character in the set [Pp].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Ss] greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Ee].<br />
					○ Optional (greedy).<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a character in the set [Ss].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Optional (greedy).<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee] exactly 2 times.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Vv].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Tt] greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Hh].<br />
					○ Match with 9 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Vv].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Bb].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Hh].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ii].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a character in the set [Ll] exactly 2 times.<br />
					○ Match a character in the set [Ll].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Bb].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ii].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Rr].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Jj].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a character in the set [Cc].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Ll] exactly 2 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll].<br />
					○ Match with 5 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Ee].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Gg].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [EKek\u212A].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Optional (greedy).<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Pp].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Mm].<br />
					○ Match with 6 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Ll] exactly 2 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Ss] greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Tt].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ll].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Oo].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a character in the set [Ll].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Oo] exactly 2 times.<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Vv].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Pp].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ss] exactly 2 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Pp].<br />
					○ Optional (greedy).<br />
					○ Match with 9 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Optional (greedy).<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Optional (greedy).<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a character in the set [Ss] exactly 2 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Hh].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ii].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Match a character in the set [Ww] atomically, optionally.<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll].<br />
					○ Optional (greedy).<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Zz].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Oo].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Qq].<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Aa].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Dd].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Yy].<br />
					○ Match a character in the set [Ss] greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Match with 7 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa] atomically, optionally.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Bb].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Hh].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Gg] greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Hh].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ss].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Vv].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Tt].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ii].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Dd].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Gg].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ss].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Gg].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match with 4 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Dd].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Uu].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ss].<br />
					○ Match with 9 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Hh].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Rr].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Vv].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Gg].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Pp].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Mm].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Pp].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Qq].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Tt].<br />
					○ Optional (greedy).<br />
					○ Match with 7 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Pp].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Pp].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee] exactly 2 times.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Pp].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Bb].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Tt].<br />
					○ Match with 7 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Rr].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Oo].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll] exactly 2 times.<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a character in the set [PRpr].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Optional (greedy).<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ll].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ff].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Nn].<br />
					○ Optional (greedy).<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Pp].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ss] exactly 2 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Vv].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Vv].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ll].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ii].<br />
					○ Optional (greedy).<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ss].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Ss] greedily, optionally.<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ww].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [KLkl\u212A].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Ff].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Yy].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Xx].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Gg].<br />
					○ Match if at a word boundary.<br />
					○ Match '.' atomically, optionally.<br />
					○ Optional (greedy).<br />
					○ Match ' ' atomically at least 1 and at most 2 times.<br />
					○ "StreetSuffix" capture group.<br />
					○ Match with 4 alternative expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [EWew] greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [EWew] greedily, optionally.<br />
					○ Match a character in the set [Ww].<br />
					○ Match if at a word boundary.<br />
					○ Optional (greedy).<br />
					○ Match with 3 alternative expressions.<br />
					○ Match if at the beginning of the string.<br />
					○ Match ' ' greedily at least 1 and at most 2 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [,.;].<br />
					○ Match a whitespace character lazily at most 2 times.<br />
					○ "Apt" capture group.<br />
					○ Optional (greedy).<br />
					○ Match '#' atomically, optionally.<br />
					○ Match a Unicode digit greedily at least 1 and at most 5 times.<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [ .] atomically at most 2 times.<br />
					○ Match with 4 alternative expressions.<br />
					○ Match '°'.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [ ,.;] greedily at most 2 times.<br />
					○ Loop greedily at least 1 and at most 3 times.<br />
					○ Match with 9 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match with 11 alternative expressions, atomically.<br />
					○ Match a sequence of expressions.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Pp].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Tt].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Mm].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Ss] atomically, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Bb].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Dd].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Gg] atomically, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ff].<br />
					○ Match a character in the set [Ll].<br />
					○ Optional (greedy).<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Oo] exactly 2 times.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [Aa] atomically, optionally.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Ss] atomically, optionally.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Pp].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Mm].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ss].<br />
					○ 1st capture group.<br />
					○ Match with 3 alternative expressions, atomically.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Pp].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Cc].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ 2nd capture group.<br />
					○ Match with 2 alternative expressions, atomically.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Pp].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Tt].<br />
					○ Zero-width positive lookahead.<br />
					○ Match '#'.<br />
					○ Optional (lazy).<br />
					○ Match ' ' atomically at least 1 and at most 2 times.<br />
					○ Match '#' atomically, optionally.<br />
					○ Match a word character greedily at least 1 and at most 5 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Bb].<br />
					○ Match a character in the set [Aa] atomically, optionally.<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Ee] atomically, optionally.<br />
					○ Match a character in the set [Mm].<br />
					○ Match a character in the set [Ee] atomically, optionally.<br />
					○ Match a character in the set [Nn] atomically, optionally.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ff].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Oo] atomically, optionally.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo] atomically, optionally.<br />
					○ Match a character in the set [Bb] exactly 2 times.<br />
					○ Match a character in the set [Yy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Ee] atomically, optionally.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Ff].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a character in the set [Cc].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Pp].<br />
					○ Match '.' atomically, optionally.<br />
					○ Match a character in the set [Hh].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Pp] exactly 2 times.<br />
					○ Match a character in the set [Rr].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [ #,.;] greedily at least 1 and at most 3 times.<br />
					○ Loop greedily at least 1 and at most 3 times.<br />
					○ Match a character in the set [-.] atomically, optionally.<br />
					○ Match a character in the set [A-Za-z\u212A\d].<br />
					○ Match a character in the set [,.;] greedily, optionally.<br />
					○ Optional (greedy).<br />
					○ "CityState" capture group.<br />
					○ Match a character in the set [(,-.;[] atomically, optionally.<br />
					○ Match a whitespace character atomically at least 1 and at most 4 times.<br />
					○ "City" capture group.<br />
					○ Match a character in the set [A-Za-z\u212A] greedily at least 2 and at most 17 times.<br />
					○ Match '.' greedily, optionally.<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [ -].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a character in the set [A-Za-z\u212A] greedily at least 1 and at most 17 times.<br />
					○ Match a character in the set [A-Za-z\u212A] greedily at least 1 and at most 3 times.<br />
					○ Loop greedily at most 7 times.<br />
					○ Match a character in the set [ -].<br />
					○ Match a character in the set [A-Za-z\u212A] greedily at least 1 and at most 17 times.<br />
					○ Zero-width negative lookbehind.<br />
					○ Match a character in the set [AC-EH-PR-Zac-eh-pr-z\u212A] right-to-left.<br />
					○ Match a character in the set [ACDF-IK-PR-Wacdf-ik-pr-w\u212A] right-to-left.<br />
					○ Match a whitespace character right-to-left.<br />
					○ Match ')' greedily, optionally.<br />
					○ Optional (greedy).<br />
					○ "State" capture group.<br />
					○ Match with 2 alternative expressions, atomically.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [,-.;] atomically, optionally.<br />
					○ Match a whitespace character atomically at least 1 and at most 4 times.<br />
					○ Match a character in the set [([] atomically, optionally.<br />
					○ "StateAbbr" capture group.<br />
					○ Match with 19 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [AKLPRSZaklprsz\u212A].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [AOTaot].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [CEce].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [LMlm].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [AUau].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [ADLNadln].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [SYsy].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [ADEHIN-PSTadehin-pst].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [C-EHJMVYc-ehjmvy].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [HKRhkr\u212A].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [ARWarw].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [CDcd].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [NXnx].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [AITait].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [AIVYaivy].<br />
					○ Match if at a word boundary.<br />
					○ Match a character in the set [)]] atomically, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [,-.;].<br />
					○ Match a whitespace character greedily at most 3 times.<br />
					○ Match ' '.<br />
					○ Match a character in the set [([] atomically, optionally.<br />
					○ Zero-width positive lookahead.<br />
					○ Match a character in the set [A-Za-z\u212A].<br />
					○ "StateName" capture group.<br />
					○ Match with 21 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Aa].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Mm] atomically at least once.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [SZsz].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [SZsz].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Cc].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Ff].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Nn] atomically at least once.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Cc] atomically, optionally.<br />
					○ Match a character in the set [Tt] atomically at least once.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Tt] greedily at least once.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [AEae].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Ee] greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ff].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Ii] atomically, optionally.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ww] atomically at least once.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ii] greedily at least once.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ii].<br />
					○ Match with 4 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll] atomically at least 1 and at most 2 times.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [CKck\u212A] atomically at least once.<br />
					○ Match a character in the set [IYiy].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Ss] atomically at least once.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Nn] atomically at least once.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Mm].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Aa].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [IYiy].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ss] atomically at least once.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Tt] atomically at least once.<br />
					○ Match a character in the set [Ss].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ii].<br />
					○ Match with 4 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Nn] atomically at least once.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ss] atomically at least once.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Tt] atomically at least once.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ss] atomically at least once.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Ss] atomically at least once.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Pp] atomically at least once.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ss] atomically at least once.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Ee].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Bb].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [SZsz].<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Vv].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ww].<br />
					○ Match ' ' atomically, optionally.<br />
					○ Match with 4 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Mm].<br />
					○ Match a character in the set [Pp] atomically, optionally.<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [IYiy].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Xx].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [NSns].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [RUru].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Hh].<br />
					○ Match '.'.<br />
					○ Match ' ' atomically, optionally.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Kk\u212A].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Oo].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Mm].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Pp].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Nn] atomically at least once.<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [IYiy].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Vv].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Nn] atomically at least once.<br />
					○ Match a character in the set [IYiy].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Hh] atomically, optionally.<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Aa] atomically, optionally.<br />
					○ Match a character in the set [Dd].<br />
					○ Match a character in the set [Ee] atomically, optionally.<br />
					○ Match ' ' atomically, optionally.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Dd].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Ee].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Nn] atomically at least once.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Ss] atomically at least once.<br />
					○ Match a character in the set [Ee] greedily at least once.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Xx].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Uu].<br />
					○ Match a character in the set [Tt] atomically at least once.<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Hh] greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Vv].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Mm].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ww].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a sequence of expressions.<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [Ww].<br />
					○ Optional (greedy).<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Tt].<br />
					○ Match '.'.<br />
					○ Match ' ' atomically, optionally.<br />
					○ Match a character in the set [Vv].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Rr].<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Aa].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ww].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [SZsz].<br />
					○ Match a character in the set [Cc].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Uu] atomically, optionally.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [IYiy].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Mm].<br />
					○ Match a character in the set [IYiy] atomically at least once.<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Gg] greedily, optionally.<br />
					○ Match a character in the set [)]] atomically, optionally.<br />
					○ Conditionally match one of two expressions depending on whether the "State" capture group matched.<br />
					○ Matched: Match an empty string.<br />
					○ Not Matched: Match with 2 alternative expressions.<br />
					○ Zero-width positive lookbehind.<br />
					○ Match ')' right-to-left.<br />
					○ Zero-width negative lookahead.<br />
					○ Match ' '.<br />
					○ Match a character in the set [A-Za-z\u212A].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [,-.;\s] greedily at most 4 times.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match if at the beginning of the string.<br />
					○ Match ' ' greedily at least 1 and at most 2 times.<br />
					○ Match a character in the set [([] greedily, optionally.<br />
					○ "ZipCode" capture group.<br />
					○ Zero-width negative lookahead.<br />
					○ Match the string "00000".<br />
					○ Match a Unicode digit exactly 5 times.<br />
					○ Optional (greedy).<br />
					○ Match '-'.<br />
					○ Match a Unicode digit exactly 4 times.<br />
					○ Match a character in the set [)]] atomically, optionally.<br />
					○ Conditionally match one of two expressions depending on whether the "State" capture group matched.<br />
					○ Matched: Match an empty string.<br />
					○ Not Matched: Conditionally match one of two expressions depending on whether the "ZipCode" capture group matched.<br />
					○ Matched: Match an empty string.<br />
					○ Not Matched: Conditionally match one of two expressions depending on whether the "City" capture group matched.<br />
					○ Matched: Fail to match.<br />
					○ Not Matched: Conditionally match one of two expressions depending on whether the "PO" capture group matched.<br />
					○ Matched: Match an empty string.<br />
					○ Not Matched: Conditionally match one of two expressions depending on whether the "NumberException" capture group matched.<br />
					○ Matched: Fail to match.<br />
					○ Not Matched: Conditionally match one of two expressions depending on whether the "StreetNameIndicator" capture group matched.<br />
					○ Matched: Match an empty string.<br />
					○ Not Matched: Conditionally match one of two expressions depending on whether the "StreetType" capture group matched.<br />
					○ Matched: Match an empty string.<br />
					○ Not Matched: Conditionally match one of two expressions depending on whether the "StreetPrefix" capture group matched.<br />
					○ Matched: Match an empty string.<br />
					○ Not Matched: Fail to match.<br />
					○ Zero-width positive lookahead.<br />
					○ Match with 2 alternative expressions, atomically.<br />
					○ Match a character in the set [!"').?]\s].<br />
					○ Match if at the end of the string or if before an ending newline.<br />
					○ Zero-width negative lookahead.<br />
					○ Match ' ' atomically at least once.<br />
					○ Match a Unicode digit.<br />
					○ Match '/'.<br />
					○ Match a character in the set [Gg].<br />
					○ Match a character in the set [Mm].<br />
					○ Match a character in the set [Xx].<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.DateOnly">
			<remarks>
				Pattern:<br />
				<code>\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$</code><br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Match a Unicode digit exactly 4 times.<br />
					○ Match '-'.<br />
					○ 1st capture group.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [1-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [0-2].<br />
					○ Match '-'.<br />
					○ 2nd capture group.<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [1-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [0-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [01].<br />
					○ Match if at the end of the string or if before an ending newline.<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.DateTimeOffset">
			<remarks>
				Pattern:<br />
				<code>^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])TValue([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)(\\.\\d{1,7})?([+-]([01]\\d|2[0-3]):([0-5]\\d)|Z)$</code><br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Match if at the beginning of the string.<br />
					○ 1st capture group.<br />
					○ Match a Unicode digit exactly 4 times.<br />
					○ Match '-'.<br />
					○ 2nd capture group.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [1-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [0-2].<br />
					○ Match '-'.<br />
					○ 3rd capture group.<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [1-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a Unicode digit.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [01].<br />
					○ Match a character in the set [Tt].<br />
					○ 4th capture group.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a Unicode digit.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [0-3].<br />
					○ Match ':'.<br />
					○ 5th capture group.<br />
					○ Match a character in the set [0-5].<br />
					○ Match a Unicode digit.<br />
					○ Match ':'.<br />
					○ 6th capture group.<br />
					○ Match a character in the set [0-5].<br />
					○ Match a Unicode digit.<br />
					○ Optional (greedy).<br />
					○ 7th capture group.<br />
					○ Match '.'.<br />
					○ Match a Unicode digit atomically at least 1 and at most 7 times.<br />
					○ 8th capture group.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [+-].<br />
					○ 9th capture group.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a Unicode digit.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [0-3].<br />
					○ Match ':'.<br />
					○ 10th capture group.<br />
					○ Match a character in the set [0-5].<br />
					○ Match a Unicode digit.<br />
					○ Match a character in the set [Zz].<br />
					○ Match if at the end of the string or if before an ending newline.<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.Email">
			<remarks>
				Pattern:<br />
				<code>(?:[a-z0-9!#$%&amp;'*+/=&gt;?^_`{|}~-]+(?:\\.[a-z0-9!#$%&amp;'*+/=&gt;?^_`{|}~-]+)*|"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])</code>
				<br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [!#-'*+-/-9=-?A-Z^-~\u212A] greedily at least once.<br />
					○ Loop greedily any number of times.<br />
					○ Match '.'.<br />
					○ Match a character in the set [!#-'*+-/-9=-?A-Z^-~\u212A] atomically at least once.<br />
					○ Match a sequence of expressions.<br />
					○ Match '"'.<br />
					○ Loop greedily any number of times.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a character in the set [\u0001-\b\v\f\u000E-\u001F!#-[]-\u007F\u212A].<br />
					○ Match a sequence of expressions.<br />
					○ Match '\\'.<br />
					○ Match a character in the set [\u0001-\t\v\f\u000E-\u007F\u212A].<br />
					○ Match '"'.<br />
					○ Match '@'.<br />
					○ Match with 2 alternative expressions, atomically.<br />
					○ Match a sequence of expressions.<br />
					○ Loop greedily at least once.<br />
					○ Match a character in the set [0-9A-Za-z\u212A].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [-0-9A-Za-z\u212A] greedily any number of times.<br />
					○ Match a character in the set [0-9A-Za-z\u212A].<br />
					○ Match '.'.<br />
					○ Match a character in the set [0-9A-Za-z\u212A].<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [-0-9A-Za-z\u212A] greedily any number of times.<br />
					○ Match a character in the set [0-9A-Za-z\u212A].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Loop exactly 3 times.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match '2'.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [0-5].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [0-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [01] greedily, optionally.<br />
					○ Match a character in the set [0-9] atomically at least 1 and at most 2 times.<br />
					○ Match '.'.<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match '2'.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [0-5].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [0-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [01] greedily, optionally.<br />
					○ Match a character in the set [0-9] atomically at least 1 and at most 2 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [-0-9A-Za-z\u212A] greedily any number of times.<br />
					○ Match a character in the set [0-9A-Za-z\u212A].<br />
					○ Match ':'.<br />
					○ Loop greedily at least once.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a character in the set [\u0001-\b\v\f\u000E-\u001F!-\u007F\u212A].<br />
					○ Match a sequence of expressions.<br />
					○ Match '\\'.<br />
					○ Match a character in the set [\u0001-\t\v\f\u000E-\u007F\u212A].<br />
					○ Match ']'.<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.Ip">
			<remarks>
				Pattern:<br />
				<code>^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$</code><br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Match if at the beginning of the string.<br />
					○ Loop exactly 3 times.<br />
					○ 1st capture group.<br />
					○ 2nd capture group.<br />
					○ Match with 5 alternative expressions.<br />
					○ Match a character in the set [0-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [1-9].<br />
					○ Match a character in the set [0-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match '1'.<br />
					○ Match a character in the set [0-9] exactly 2 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match '2'.<br />
					○ Match a character in the set [0-4].<br />
					○ Match a character in the set [0-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match the string "25".<br />
					○ Match a character in the set [0-5].<br />
					○ Match '.'.<br />
					○ 3rd capture group.<br />
					○ Match with 5 alternative expressions.<br />
					○ Match a character in the set [0-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [1-9].<br />
					○ Match a character in the set [0-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match '1'.<br />
					○ Match a character in the set [0-9] exactly 2 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match '2'.<br />
					○ Match a character in the set [0-4].<br />
					○ Match a character in the set [0-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match the string "25".<br />
					○ Match a character in the set [0-5].<br />
					○ Match if at the end of the string or if before an ending newline.<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.IpV6">
			<remarks>
				Pattern:<br />
				<code>(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))</code>
				<br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ 1st capture group.<br />
					○ Match with 12 alternative expressions, atomically.<br />
					○ Match a sequence of expressions.<br />
					○ Loop exactly 7 times.<br />
					○ 2nd capture group.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at least 1 and at most 4 times.<br />
					○ Match ':'.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at least 1 and at most 4 times.<br />
					○ Match a sequence of expressions.<br />
					○ Loop greedily at least 1 and at most 7 times.<br />
					○ 3rd capture group.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at least 1 and at most 4 times.<br />
					○ Match ':'.<br />
					○ Match ':'.<br />
					○ Match a sequence of expressions.<br />
					○ Loop greedily at least 1 and at most 6 times.<br />
					○ 4th capture group.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at least 1 and at most 4 times.<br />
					○ Match ':'.<br />
					○ Match ':'.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at least 1 and at most 4 times.<br />
					○ Match a sequence of expressions.<br />
					○ Loop greedily at least 1 and at most 5 times.<br />
					○ 5th capture group.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at least 1 and at most 4 times.<br />
					○ Match ':'.<br />
					○ Loop greedily and atomically at least 1 and at most 2 times.<br />
					○ 6th capture group.<br />
					○ Match ':'.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at least 1 and at most 4 times.<br />
					○ Match a sequence of expressions.<br />
					○ Loop greedily at least 1 and at most 4 times.<br />
					○ 7th capture group.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at least 1 and at most 4 times.<br />
					○ Match ':'.<br />
					○ Loop greedily and atomically at least 1 and at most 3 times.<br />
					○ 8th capture group.<br />
					○ Match ':'.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at least 1 and at most 4 times.<br />
					○ Match a sequence of expressions.<br />
					○ Loop greedily at least 1 and at most 3 times.<br />
					○ 9th capture group.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at least 1 and at most 4 times.<br />
					○ Match ':'.<br />
					○ Loop greedily and atomically at least 1 and at most 4 times.<br />
					○ 10th capture group.<br />
					○ Match ':'.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at least 1 and at most 4 times.<br />
					○ Match a sequence of expressions.<br />
					○ Loop greedily at least 1 and at most 2 times.<br />
					○ 11th capture group.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at least 1 and at most 4 times.<br />
					○ Match ':'.<br />
					○ Loop greedily and atomically at least 1 and at most 5 times.<br />
					○ 12th capture group.<br />
					○ Match ':'.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at least 1 and at most 4 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at least 1 and at most 4 times.<br />
					○ Match ':'.<br />
					○ 13th capture group.<br />
					○ Loop greedily and atomically at least 1 and at most 6 times.<br />
					○ 14th capture group.<br />
					○ Match ':'.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at least 1 and at most 4 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match ':'.<br />
					○ 15th capture group.<br />
					○ Match with 2 alternative expressions, atomically.<br />
					○ Loop greedily and atomically at least 1 and at most 7 times.<br />
					○ 16th capture group.<br />
					○ Match ':'.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at least 1 and at most 4 times.<br />
					○ Match ':'.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ff].<br />
					○ Match a character in the set [Ee].<br />
					○ Match the string "80:".<br />
					○ Loop greedily at most 4 times.<br />
					○ 17th capture group.<br />
					○ Match ':'.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at most 4 times.<br />
					○ Match '%'.<br />
					○ Match a character in the set [0-9A-Za-z\u212A] atomically at least once.<br />
					○ Match a sequence of expressions.<br />
					○ Match the string "::".<br />
					○ Optional (greedy).<br />
					○ 18th capture group.<br />
					○ Match a character in the set [Ff] exactly 4 times.<br />
					○ Optional (greedy).<br />
					○ 19th capture group.<br />
					○ Match ':'.<br />
					○ Match '0' atomically at least 1 and at most 4 times.<br />
					○ Match ':'.<br />
					○ Loop exactly 3 times.<br />
					○ 20th capture group.<br />
					○ 21st capture group.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match the string "25".<br />
					○ Match a character in the set [0-5].<br />
					○ Match a sequence of expressions.<br />
					○ Optional (greedy).<br />
					○ 22nd capture group.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match '2'.<br />
					○ Match a character in the set [0-4].<br />
					○ Match a sequence of expressions.<br />
					○ Match '1' greedily, optionally.<br />
					○ Match a character in the set [0-9].<br />
					○ Match a character in the set [0-9].<br />
					○ Match '.'.<br />
					○ 23rd capture group.<br />
					○ Match with 2 alternative expressions, atomically.<br />
					○ Match a sequence of expressions.<br />
					○ Match the string "25".<br />
					○ Match a character in the set [0-5].<br />
					○ Match a sequence of expressions.<br />
					○ Optional (greedy).<br />
					○ 24th capture group.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match '2'.<br />
					○ Match a character in the set [0-4].<br />
					○ Match a sequence of expressions.<br />
					○ Match '1' greedily, optionally.<br />
					○ Match a character in the set [0-9].<br />
					○ Match a character in the set [0-9].<br />
					○ Match a sequence of expressions.<br />
					○ Loop greedily at least 1 and at most 4 times.<br />
					○ 25th capture group.<br />
					○ Match a character in the set [0-9A-Fa-f] atomically at least 1 and at most 4 times.<br />
					○ Match ':'.<br />
					○ Match ':'.<br />
					○ Loop exactly 3 times.<br />
					○ 26th capture group.<br />
					○ 27th capture group.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match the string "25".<br />
					○ Match a character in the set [0-5].<br />
					○ Match a sequence of expressions.<br />
					○ Optional (greedy).<br />
					○ 28th capture group.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match '2'.<br />
					○ Match a character in the set [0-4].<br />
					○ Match a sequence of expressions.<br />
					○ Match '1' greedily, optionally.<br />
					○ Match a character in the set [0-9].<br />
					○ Match a character in the set [0-9].<br />
					○ Match '.'.<br />
					○ 29th capture group.<br />
					○ Match with 2 alternative expressions, atomically.<br />
					○ Match a sequence of expressions.<br />
					○ Match the string "25".<br />
					○ Match a character in the set [0-5].<br />
					○ Match a sequence of expressions.<br />
					○ Optional (greedy).<br />
					○ 30th capture group.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match '2'.<br />
					○ Match a character in the set [0-4].<br />
					○ Match a sequence of expressions.<br />
					○ Match '1' greedily, optionally.<br />
					○ Match a character in the set [0-9].<br />
					○ Match a character in the set [0-9].<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.Url">
			<remarks>
				Pattern:<br />
				<code>(?:(?:https?|ftp|file):\\/\\/|www\\.|ftp\\.)(?:\\([-A-Z0-9+&amp;@#\\/%=~_|$?!:,.]*\\)|[-A-Z0-9+&amp;@#\\/%=~_|$?!:,.])*(?:\\([-A-Z0-9+&amp;@#\\/%=~_|$?!:,.]*\\)|[A-Z0-9+&amp;@#\\/%=~_|$])</code>
				<br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Hh].<br />
					○ Match a character in the set [Tt] exactly 2 times.<br />
					○ Match a character in the set [Pp].<br />
					○ Match a character in the set [Ss] atomically, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ff].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Pp].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Ll].<br />
					○ Match a character in the set [Ee].<br />
					○ Match the string "://".<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ww] exactly 3 times.<br />
					○ Match '.'.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ff].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Pp].<br />
					○ Match '.'.<br />
					○ Loop greedily any number of times.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match '('.<br />
					○ Match a character in the set [!#-&amp;+-:=?-Z_a-z|~\u212A] atomically any number of times.<br />
					○ Match ')'.<br />
					○ Match a character in the set [!#-&amp;+-:=?-Z_a-z|~\u212A].<br />
					○ Match with 2 alternative expressions, atomically.<br />
					○ Match a sequence of expressions.<br />
					○ Match '('.<br />
					○ Match a character in the set [!#-&amp;+-:=?-Z_a-z|~\u212A] atomically any number of times.<br />
					○ Match ')'.<br />
					○ Match a character in the set [#-&amp;+/-9=@-Z_a-z|~\u212A].<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.PhoneNumbers.Brazil">
			<remarks>
				Pattern:<br />
				<code>(^|\\()?\\s*(\\d{2})\\s*(\\s|\\))*(9?\\d{4})(\\s|-)?(\\d{4})($|\\n)</code><br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Optional (greedy).<br />
					○ 1st capture group.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match if at the beginning of the string.<br />
					○ Match '('.<br />
					○ Match a whitespace character atomically any number of times.<br />
					○ 2nd capture group.<br />
					○ Match a Unicode digit exactly 2 times.<br />
					○ Match a whitespace character greedily any number of times.<br />
					○ Loop greedily any number of times.<br />
					○ 3rd capture group.<br />
					○ Match a character in the set [)\s].<br />
					○ 4th capture group.<br />
					○ Match '9' greedily, optionally.<br />
					○ Match a Unicode digit exactly 4 times.<br />
					○ Optional (greedy).<br />
					○ 5th capture group.<br />
					○ Match a character in the set [-\s].<br />
					○ 6th capture group.<br />
					○ Match a Unicode digit exactly 4 times.<br />
					○ 7th capture group.<br />
					○ Match with 2 alternative expressions, atomically.<br />
					○ Match if at the end of the string or if before an ending newline.<br />
					○ Match '\n'.<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.PhoneNumbers.China1">
			<remarks>
				Pattern:<br />
				<code>^(13[0-9]|14[57]|15[012356789]|17[0678]|18[0-9])[0-9]{8}$</code><br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Match if at the beginning of the string.<br />
					○ 1st capture group.<br />
					○ Match '1'.<br />
					○ Match with 5 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [0-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [57].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [0-35-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [06-8].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [0-9].<br />
					○ Match a character in the set [0-9] exactly 8 times.<br />
					○ Match if at the end of the string or if before an ending newline.<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.PhoneNumbers.China2">
			<remarks>
				Pattern:<br />
				<code>1[34578][012356789]\\d{8}|134[012345678]\\d{7}</code><br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Match '1'.<br />
					○ Match with 2 alternative expressions, atomically.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [3-578].<br />
					○ Match a character in the set [0-35-9].<br />
					○ Match a Unicode digit exactly 8 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match the string "34".<br />
					○ Match a character in the set [0-8].<br />
					○ Match a Unicode digit exactly 7 times.<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.PhoneNumbers.Generic">
			<remarks>
				Pattern:<br />
				<code>((?:\\+|00)[17](?: |\\-)?|(?:\\+|00)[1-9]\\d{0,2}(?: |\\-)?|(?:\\+|00)1\\-\\d{3}(?: |\\-)?)?(0\\d|\\([0-9]{3}\\)|[1-9]{0,3})(?:((?: |\\-)[0-9]{2}){4}|((?:[0-9]{2}){4})|((?: |\\-)[0-9]{3}(?: |\\-)[0-9]{4})|([0-9]{7}))</code>
				<br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Optional (greedy).<br />
					○ 1st capture group.<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match '+'.<br />
					○ Match the string "00".<br />
					○ Match a character in the set [17].<br />
					○ Match a character in the set [ -] greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match '+'.<br />
					○ Match the string "00".<br />
					○ Match a character in the set [1-9].<br />
					○ Match a Unicode digit greedily at most 2 times.<br />
					○ Match a character in the set [ -] greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match '+'.<br />
					○ Match the string "00".<br />
					○ Match the string "1-".<br />
					○ Match a Unicode digit exactly 3 times.<br />
					○ Match a character in the set [ -] greedily, optionally.<br />
					○ 2nd capture group.<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match '0'.<br />
					○ Match a Unicode digit.<br />
					○ Match a sequence of expressions.<br />
					○ Match '('.<br />
					○ Match a character in the set [0-9] exactly 3 times.<br />
					○ Match ')'.<br />
					○ Match a character in the set [1-9] greedily at most 3 times.<br />
					○ Match with 4 alternative expressions, atomically.<br />
					○ Loop exactly 4 times.<br />
					○ 3rd capture group.<br />
					○ Match a character in the set [ -].<br />
					○ Match a character in the set [0-9] exactly 2 times.<br />
					○ 4th capture group.<br />
					○ Loop exactly 4 times.<br />
					○ Match a character in the set [0-9] exactly 2 times.<br />
					○ 5th capture group.<br />
					○ Match a character in the set [ -].<br />
					○ Match a character in the set [0-9] exactly 3 times.<br />
					○ Match a character in the set [ -].<br />
					○ Match a character in the set [0-9] exactly 4 times.<br />
					○ 6th capture group.<br />
					○ Match a character in the set [0-9] exactly 7 times.<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.PhoneNumbers.Germany">
			<remarks>
				Pattern:<br />
				<code>/^([\\+][0-9]{1,3}[ \\.\\-])?([\\(]{1}[0-9]{1,6}[\\)])?([0-9 \\.\\-\\/]{3,20})((x|ext|extension)[ ]?[0-9]{1,4})?$/</code><br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Match '/'.<br />
					○ Match if at the beginning of the string.<br />
					○ Optional (greedy).<br />
					○ 1st capture group.<br />
					○ Match '+'.<br />
					○ Match a character in the set [0-9] atomically at least 1 and at most 3 times.<br />
					○ Match a character in the set [ -.].<br />
					○ Optional (greedy).<br />
					○ 2nd capture group.<br />
					○ Match '('.<br />
					○ Match a character in the set [0-9] atomically at least 1 and at most 6 times.<br />
					○ Match ')'.<br />
					○ 3rd capture group.<br />
					○ Match a character in the set [ --9] greedily at least 3 and at most 20 times.<br />
					○ Optional (greedy).<br />
					○ 4th capture group.<br />
					○ 5th capture group.<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a character in the set [Xx].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Xx].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Xx].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Nn].<br />
					○ Match ' ' atomically, optionally.<br />
					○ Match a character in the set [0-9] atomically at least 1 and at most 4 times.<br />
					○ Match if at the end of the string or if before an ending newline.<br />
					○ Match '/'.<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.PhoneNumbers.India">
			<remarks>
				Pattern:<br />
				<code>^(?:(?:\\+|0{0,2})91(\\s*[\\ -]\\s*)?|[0]?)?[789]\\d{9}|(\\d[ -]?){10}\\d$</code><br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Match with 2 alternative expressions, atomically.<br />
					○ Match a sequence of expressions.<br />
					○ Match if at the beginning of the string.<br />
					○ Optional (greedy).<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match '+'.<br />
					○ Match '0' atomically at most 2 times.<br />
					○ Match the string "91".<br />
					○ Optional (greedy).<br />
					○ 1st capture group.<br />
					○ Match a whitespace character greedily any number of times.<br />
					○ Match a character in the set [ -].<br />
					○ Match a whitespace character greedily any number of times.<br />
					○ Match '0' greedily, optionally.<br />
					○ Match a character in the set [7-9].<br />
					○ Match a Unicode digit exactly 9 times.<br />
					○ Match a sequence of expressions.<br />
					○ Loop exactly 10 times.<br />
					○ 2nd capture group.<br />
					○ Match a Unicode digit.<br />
					○ Match a character in the set [ -] atomically, optionally.<br />
					○ Match a Unicode digit.<br />
					○ Match if at the end of the string or if before an ending newline.<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.PhoneNumbers.Indonesia">
			<remarks>
				Pattern:<br />
				<code>\\(?(?:\\+62|62|0)(?:\\d{2,3})?\\)?[ .-]?\\d{2,4}[ .-]?\\d{2,4}[ .-]?\\d{2,4}</code><br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Match '(' atomically, optionally.<br />
					○ Match with 3 alternative expressions.<br />
					○ Match the string "+62".<br />
					○ Match the string "62".<br />
					○ Match '0'.<br />
					○ Optional (greedy).<br />
					○ Match a Unicode digit greedily at least 2 and at most 3 times.<br />
					○ Match ')' atomically, optionally.<br />
					○ Match a character in the set [ -.] atomically, optionally.<br />
					○ Match a Unicode digit greedily at least 2 and at most 4 times.<br />
					○ Match a character in the set [ -.] atomically, optionally.<br />
					○ Match a Unicode digit greedily at least 2 and at most 4 times.<br />
					○ Match a character in the set [ -.] atomically, optionally.<br />
					○ Match a Unicode digit atomically at least 2 and at most 4 times.<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.PhoneNumbers.Japan">
			<remarks>
				Pattern:<br />
				<code>^(?:\\d{10}|\\d{3}-\\d{3}-\\d{4}|\\d{2}-\\d{4}-\\d{4}|\\d{3}-\\d{4}-\\d{4})$</code><br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Match if at the beginning of the string.<br />
					○ Match with 4 alternative expressions.<br />
					○ Match a Unicode digit exactly 10 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match a Unicode digit exactly 3 times.<br />
					○ Match '-'.<br />
					○ Match a Unicode digit exactly 3 times.<br />
					○ Match '-'.<br />
					○ Match a Unicode digit exactly 4 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match a Unicode digit exactly 2 times.<br />
					○ Match '-'.<br />
					○ Match a Unicode digit exactly 4 times.<br />
					○ Match '-'.<br />
					○ Match a Unicode digit exactly 4 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match a Unicode digit exactly 3 times.<br />
					○ Match '-'.<br />
					○ Match a Unicode digit exactly 4 times.<br />
					○ Match '-'.<br />
					○ Match a Unicode digit exactly 4 times.<br />
					○ Match if at the end of the string or if before an ending newline.<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.PhoneNumbers.Russia">
			<remarks>
				Pattern:<br />
				<code>^((\\+7|7|8)+([0-9]){10})$</code><br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Match if at the beginning of the string.<br />
					○ 1st capture group.<br />
					○ Loop greedily at least once.<br />
					○ 2nd capture group.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match the string "+7".<br />
					○ Match a character in the set [78].<br />
					○ Loop exactly 10 times.<br />
					○ 3rd capture group.<br />
					○ Match a character in the set [0-9].<br />
					○ Match if at the end of the string or if before an ending newline.<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.PhoneNumbers.UnitedKingdom">
			<remarks>
				Pattern:<br />
				<code>^(?:(?:\\(?(?:0(?:0|11)\\)?[\\s-]?\\(?|\\+)44\\)?[\\s-]?(?:\\(?0\\)?[\\s-]?)?)|(?:\\(?0))(?:(?:\\d{5}\\)?[\\s-]?\\d{4,5})|(?:\\d{4}\\)?[\\s-]?(?:\\d{5}|\\d{3}[\\s-]?\\d{3}))|(?:\\d{3}\\)?[\\s-]?\\d{3}[\\s-]?\\d{3,4})|(?:\\d{2}\\)?[\\s-]?\\d{4}[\\s-]?\\d{4}))(?:[\\s-]?(?:x|ext\\.?|\\#)\\d{3,4})?$</code>
				<br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Match if at the beginning of the string.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match '(' atomically, optionally.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match '0'.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match '0'.<br />
					○ Match the string "11".<br />
					○ Match ')' atomically, optionally.<br />
					○ Match a character in the set [-\s] atomically, optionally.<br />
					○ Match '(' atomically, optionally.<br />
					○ Match '+'.<br />
					○ Match the string "44".<br />
					○ Match ')' greedily, optionally.<br />
					○ Match a character in the set [-\s] greedily, optionally.<br />
					○ Optional (greedy).<br />
					○ Match '(' atomically, optionally.<br />
					○ Match '0'.<br />
					○ Match ')' greedily, optionally.<br />
					○ Match a character in the set [-\s] greedily, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match '(' atomically, optionally.<br />
					○ Match '0'.<br />
					○ Match with 4 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match a Unicode digit exactly 5 times.<br />
					○ Match ')' atomically, optionally.<br />
					○ Match a character in the set [-\s] greedily, optionally.<br />
					○ Match a Unicode digit greedily at least 4 and at most 5 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match a Unicode digit exactly 4 times.<br />
					○ Match ')' atomically, optionally.<br />
					○ Match a character in the set [-\s] greedily, optionally.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a Unicode digit exactly 5 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match a Unicode digit exactly 3 times.<br />
					○ Match a character in the set [-\s] greedily, optionally.<br />
					○ Match a Unicode digit exactly 3 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match a Unicode digit exactly 3 times.<br />
					○ Match ')' atomically, optionally.<br />
					○ Match a character in the set [-\s] greedily, optionally.<br />
					○ Match a Unicode digit exactly 3 times.<br />
					○ Match a character in the set [-\s] greedily, optionally.<br />
					○ Match a Unicode digit greedily at least 3 and at most 4 times.<br />
					○ Match a sequence of expressions.<br />
					○ Match a Unicode digit exactly 2 times.<br />
					○ Match ')' atomically, optionally.<br />
					○ Match a character in the set [-\s] greedily, optionally.<br />
					○ Match a Unicode digit exactly 4 times.<br />
					○ Match a character in the set [-\s] greedily, optionally.<br />
					○ Match a Unicode digit exactly 4 times.<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [-\s] atomically, optionally.<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a character in the set [Xx].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [Xx].<br />
					○ Match a character in the set [Tt].<br />
					○ Match '.' atomically, optionally.<br />
					○ Match '#'.<br />
					○ Match a Unicode digit greedily at least 3 and at most 4 times.<br />
					○ Match if at the end of the string or if before an ending newline.<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.PhoneNumbers.UnitedSatesOrCanada1">
			<remarks>
				Pattern:<br />
				<code>1?\\W*([2-9][0-8][0-9])\\W*([2-9][0-9]{2})\\W*([0-9]{4})(\\se?x?t?(\\d*))?</code><br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Match '1' atomically, optionally.<br />
					○ Match any character other than a word character atomically any number of times.<br />
					○ 1st capture group.<br />
					○ Match a character in the set [2-9].<br />
					○ Match a character in the set [0-8].<br />
					○ Match a character in the set [0-9].<br />
					○ Match any character other than a word character atomically any number of times.<br />
					○ 2nd capture group.<br />
					○ Match a character in the set [2-9].<br />
					○ Match a character in the set [0-9] exactly 2 times.<br />
					○ Match any character other than a word character atomically any number of times.<br />
					○ 3rd capture group.<br />
					○ Match a character in the set [0-9] exactly 4 times.<br />
					○ Optional (greedy).<br />
					○ 4th capture group.<br />
					○ Match a whitespace character.<br />
					○ Match a character in the set [Ee] greedily, optionally.<br />
					○ Match a character in the set [Xx] greedily, optionally.<br />
					○ Match a character in the set [Tt] greedily, optionally.<br />
					○ 5th capture group.<br />
					○ Match a Unicode digit atomically any number of times.<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.Validate.Re.PhoneNumbers.UnitedSatesOrCanada2">
			<remarks>
				Pattern:<br />
				<code>^(?:(?:\\+?1\\s*(?:[.-]\\s*)?)?(?:\\(\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\s*\\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\s*(?:[.-]\\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\s*(?:[.-]\\s*)?([0-9]{4})(?:\\s*(?:#|x\\.?|ext\\.?|extension)\\s*(\\d+))?$</code>
				<br />
				Options:<br />
				<code>RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Singleline</code><br />
				Explanation:<br />
				<code>
					○ Match if at the beginning of the string.<br />
					○ Optional (greedy).<br />
					○ Optional (greedy).<br />
					○ Match '+' atomically, optionally.<br />
					○ Match '1'.<br />
					○ Match a whitespace character greedily any number of times.<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [-.].<br />
					○ Match a whitespace character greedily any number of times.<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match '('.<br />
					○ Match a whitespace character atomically any number of times.<br />
					○ 1st capture group.<br />
					○ Match a character in the set [2-9].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [02-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [0-9].<br />
					○ Match a whitespace character atomically any number of times.<br />
					○ Match ')'.<br />
					○ 2nd capture group.<br />
					○ Match a character in the set [2-9].<br />
					○ Match with 2 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [02-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match an empty string.<br />
					○ Match a character in the set [0-9].<br />
					○ Match a whitespace character greedily any number of times.<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [-.].<br />
					○ Match a whitespace character greedily any number of times.<br />
					○ 3rd capture group.<br />
					○ Match a character in the set [2-9].<br />
					○ Match with 3 alternative expressions.<br />
					○ Match a sequence of expressions.<br />
					○ Match '1'.<br />
					○ Match a character in the set [02-9].<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [02-9].<br />
					○ Match '1'.<br />
					○ Match a character in the set [02-9] exactly 2 times.<br />
					○ Match a whitespace character greedily any number of times.<br />
					○ Optional (greedy).<br />
					○ Match a character in the set [-.].<br />
					○ Match a whitespace character atomically any number of times.<br />
					○ 4th capture group.<br />
					○ Match a character in the set [0-9] exactly 4 times.<br />
					○ Optional (greedy).<br />
					○ Match a whitespace character atomically any number of times.<br />
					○ Match with 4 alternative expressions.<br />
					○ Match '#'.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Xx].<br />
					○ Match '.' atomically, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Xx].<br />
					○ Match a character in the set [Tt].<br />
					○ Match '.' atomically, optionally.<br />
					○ Match a sequence of expressions.<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Xx].<br />
					○ Match a character in the set [Tt].<br />
					○ Match a character in the set [Ee].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a character in the set [Ss].<br />
					○ Match a character in the set [Ii].<br />
					○ Match a character in the set [Oo].<br />
					○ Match a character in the set [Nn].<br />
					○ Match a whitespace character atomically any number of times.<br />
					○ 5th capture group.<br />
					○ Match a Unicode digit greedily at least once.<br />
					○ Match if at the end of the string or if before an ending newline.<br />
				</code>
			</remarks>
		</member>
		<member name="P:Jakar.Extensions.LocalDirectory.CurrentDirectory">
			<summary> Gets or sets the application's fully qualified path of the current working directory. </summary>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.Create(Jakar.Extensions.LocalDirectory,System.ReadOnlySpan{System.String})">
			<summary> Uses the <paramref name="path" /> and creates the tree structure based on <paramref name="subFolders" /> </summary>
			<param name="path"> </param>
			<param name="subFolders"> </param>
			<returns>
				<see cref="TValue:Jakar.Extensions.LocalDirectory" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.Create(System.ReadOnlySpan{System.String})">
			<summary> Uses the <see cref="P:Jakar.Extensions.LocalDirectory.CurrentDirectory" /> and creates the tree structure based on <paramref name="subFolders" /> </summary>
			<param name="subFolders"> </param>
			<returns>
				<see cref="TValue:Jakar.Extensions.LocalDirectory" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.CreateTemp(System.ReadOnlySpan{System.String})">
			<summary> Uses <see cref="M:System.IO.Path.GetTempPath" /> and creates the tree structure based on <paramref name="subFolders" /> </summary>
			<param name="subFolders"> </param>
			<returns>
				<see cref="TValue:Jakar.Extensions.LocalDirectory" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.CreateSubDirectory(System.ReadOnlySpan{System.String})">
			<summary> Gets the <see cref="TValue:Jakar.Extensions.LocalDirectory" /> object of the directory in this <see cref="TValue:Jakar.Extensions.LocalDirectory" /> </summary>
			<param name="paths"> </param>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.IO.PathTooLongException"> </exception>
			<exception cref="TValue:System.Security.SecurityException"> </exception>
			<exception cref="TValue:System.NotSupportedException"> </exception>
			<returns>
				<see cref="TValue:Jakar.Extensions.LocalDirectory" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.Join(System.String)">
			<summary> Gets the <see cref="TValue:Jakar.Extensions.LocalFile" /> object of the file in this <see cref="TValue:Jakar.Extensions.LocalDirectory" /> </summary>
			<param name="path"> </param>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.IO.PathTooLongException"> </exception>
			<exception cref="TValue:System.Security.SecurityException"> </exception>
			<exception cref="TValue:System.NotSupportedException"> </exception>
			<returns>
				<see cref="TValue:Jakar.Extensions.LocalFile" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.Join(System.String,System.Text.Encoding)">
			<summary> Gets the <see cref="TValue:Jakar.Extensions.LocalFile" /> object of the file in this <see cref="TValue:Jakar.Extensions.LocalDirectory" /> </summary>
			<param name="path"> </param>
			<param name="encoding"> </param>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.IO.PathTooLongException"> </exception>
			<exception cref="TValue:System.Security.SecurityException"> </exception>
			<exception cref="TValue:System.NotSupportedException"> </exception>
			<returns>
				<see cref="TValue:Jakar.Extensions.LocalFile" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.Combine(System.String)">
			<summary> Gets the path of the directory or file in this <see cref="TValue:Jakar.Extensions.LocalDirectory" /> </summary>
			<param name="subPaths"> </param>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.IO.PathTooLongException"> </exception>
			<exception cref="TValue:System.Security.SecurityException"> </exception>
			<exception cref="TValue:System.NotSupportedException"> </exception>
			<returns>
				<see cref="TValue:System.String" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.Combine(System.ReadOnlySpan{System.String})">
			<summary> Gets the path of the directory or file in this <see cref="TValue:Jakar.Extensions.LocalDirectory" /> </summary>
			<param name="subPaths"> </param>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.IO.PathTooLongException"> </exception>
			<exception cref="TValue:System.Security.SecurityException"> </exception>
			<exception cref="TValue:System.NotSupportedException"> </exception>
			<returns>
				<see cref="TValue:System.String" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.DeleteAllRecursivelyAsync">
			<summary> Asynchronously deletes subdirectories and files. </summary>
			<exception cref="TValue:System.UnauthorizedAccessException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.Security.SecurityException"> </exception>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.DeleteFilesAsync">
			<summary> Asynchronously deletes files. </summary>
			<exception cref="TValue:System.UnauthorizedAccessException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.Security.SecurityException"> </exception>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.DeleteSubFoldersAsync">
			<summary> Asynchronously deletes subdirectories. </summary>
			<exception cref="TValue:System.UnauthorizedAccessException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.Security.SecurityException"> </exception>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.Delete">
			<summary> Deletes this directory if it is empty. </summary>
			<exception cref="TValue:System.UnauthorizedAccessException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.Security.SecurityException"> </exception>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.Delete(System.Boolean)">
			<summary> Deletes subdirectories and files. This occurs on another thread in Windows, and is not blocking. </summary>
			<param name="recursive"> </param>
			<exception cref="TValue:System.UnauthorizedAccessException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.Security.SecurityException"> </exception>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.DeleteAllRecursively">
			<summary> Deletes subdirectories and files. </summary>
			<exception cref="TValue:System.UnauthorizedAccessException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.Security.SecurityException"> </exception>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.DeleteFiles">
			<summary> Deletes sub-directories. </summary>
			<exception cref="TValue:System.UnauthorizedAccessException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.Security.SecurityException"> </exception>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.DeleteSubFolders">
			<summary> Deletes sub-directories. </summary>
			<exception cref="TValue:System.UnauthorizedAccessException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.Security.SecurityException"> </exception>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.Zip(Jakar.Extensions.LocalFile@,System.IO.Compression.CompressionLevel)">
			<summary> Uses the <see cref="P:System.Text.Encoding.Default" /> encoding to used for the file names </summary>
			<param name="output"> file path to write the zip to </param>
			<param name="compression"> Defaults to <see cref="F:System.IO.Compression.CompressionLevel.Optimal" /> </param>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.Zip(Jakar.Extensions.LocalFile@,System.Text.Encoding,System.IO.Compression.CompressionLevel)">
			<summary> </summary>
			<param name="output"> file path to write the zip to </param>
			<param name="compression"> Defaults to <see cref="F:System.IO.Compression.CompressionLevel.Optimal" /> </param>
			<param name="encoding"> The encoding used for the file names </param>
		</member>
		<member name="M:Jakar.Extensions.LocalDirectory.Watcher.#ctor">
			<summary> Uses the <see cref="P:Jakar.Extensions.LocalDirectory.CurrentDirectory" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.FromUri(System.Uri)">
			<summary> </summary>
			<param name="uri"> </param>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.Security.SecurityException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.UnauthorizedAccessException"> </exception>
			<exception cref="TValue:System.IO.PathTooLongException"> </exception>
			<exception cref="TValue:System.NotSupportedException"> </exception>
			<returns> </returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.CreateAndOpen(System.String,Jakar.Extensions.LocalFile@)">
			<summary> </summary>
			<param name="path"> </param>
			<param name="file"> </param>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<exception cref="TValue:System.IO.PathTooLongException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.NotSupportedException"> </exception>
			<returns> </returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.CreateTempFileAndOpen(Jakar.Extensions.LocalFile@)">
			<summary> </summary>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<exception cref="TValue:System.IO.PathTooLongException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.NotSupportedException"> </exception>
			<returns> </returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.CreateTempFileAndOpen(Jakar.Extensions.MimeType,Jakar.Extensions.LocalFile@)">
			<summary> </summary>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<exception cref="TValue:System.IO.PathTooLongException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.NotSupportedException"> </exception>
			<returns> </returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.SaveToFileAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<param name="path"> </param>
			<param name="token"> </param>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.Net.WebException"> </exception>
			<exception cref="TValue:System.NotSupportedException"> </exception>
			<returns> </returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.SaveToFileAsync(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<param name="path"> </param>
			<param name="token"> </param>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.Net.WebException"> </exception>
			<exception cref="TValue:System.NotSupportedException"> </exception>
			<returns>
				<see cref="TValue:Jakar.Extensions.LocalFile" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
			<summary>
				<para>
					<seealso href="https://stackoverflow.com/a/11541330/9530917" />
				</para>
			</summary>
			<param name="mode"> </param>
			<param name="access"> </param>
			<param name="share"> </param>
			<param name="bufferSize"> </param>
			<param name="useAsync"> </param>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.NotSupportedException"> </exception>
			<exception cref="TValue:System.ArgumentOutOfRangeException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.Security.SecurityException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.UnauthorizedAccessException"> </exception>
			<exception cref="TValue:System.IO.PathTooLongException"> </exception>
			<returns>
				<see cref="TValue:System.IO.FileStream" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.OpenRead(System.Int32,System.Boolean)">
			<summary> Opens file for read only actions. If it doesn't exist, <see cref="TValue:System.IO.FileNotFoundException" /> will be raised. </summary>
			<param name="bufferSize"> </param>
			<param name="useAsync"> </param>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.NotSupportedException"> </exception>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentOutOfRangeException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.Security.SecurityException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.UnauthorizedAccessException"> </exception>
			<exception cref="TValue:System.IO.PathTooLongException"> </exception>
			<returns>
				<see cref="TValue:System.IO.FileStream" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.OpenWrite(System.IO.FileMode,System.Int32,System.Boolean)">
			<summary> Opens file for write only actions. If it doesn't exist, file will be created. </summary>
			<param name="mode"> </param>
			<param name="bufferSize"> </param>
			<param name="useAsync"> </param>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.NotSupportedException"> </exception>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentOutOfRangeException"> </exception>
			<exception cref="TValue:System.IO.IOException"> </exception>
			<exception cref="TValue:System.Security.SecurityException"> </exception>
			<exception cref="TValue:System.IO.DirectoryNotFoundException"> </exception>
			<exception cref="TValue:System.UnauthorizedAccessException"> </exception>
			<exception cref="TValue:System.IO.PathTooLongException"> </exception>
			<returns>
				<see cref="TValue:System.IO.FileStream" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.ChangeExtension(Jakar.Extensions.MimeType)">
			<summary> Changes the extension of the file. </summary>
			<param name="ext"> </param>
			<returns> The modified path information. On Windows, if ext is null or empty, the path information is unchanged. If the extension is null, the returned path is with the extension removed. If the path has no extension, and the extension is not null, the returned string contains the extension appended to the end of the path. </returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.ChangeExtension(System.String)">
			<summary> Changes the extension of the file. </summary>
			<param name="ext"> </param>
			<returns> The modified path information. On Windows, if ext is null or empty, the path information is unchanged. If the extension is null, the returned path is with the extension removed. If the path has no extension, and the extension is not null, the returned string contains the extension appended to the end of the path. </returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Hash_MD5">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.MD5" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Hash_SHA1">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA1" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Hash_SHA256">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA256" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Hash_SHA384">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA384" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Hash_SHA512">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA512" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.ToUri(System.Nullable{Jakar.Extensions.MimeType})">
			<summary> Creates an <see cref="F:System.UriKind.Absolute" /> based on the detected <see cref="P:Jakar.Extensions.LocalFile.Mime" /> </summary>
			<param name="mime"> To override the detected <see cref="P:Jakar.Extensions.LocalFile.Mime" /> , provide a non-null value </param>
			<returns> </returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.ToUri(System.Uri,System.String,System.Nullable{Jakar.Extensions.MimeType})">
			<summary>
				Creates a <see cref="TValue:System.Uri" /> using provided prefix, and <see cref="M:System.Web.HttpUtility.UrlEncode(System.String)" /> to encode the
				<see cref="P:Jakar.Extensions.LocalFile.FullPath" /> .
			</summary>
			<param name="baseUri"> </param>
			<param name="prefix"> The key to attach the <see cref="P:Jakar.Extensions.LocalFile.FullPath" /> to. Defaults to "?path=" </param>
			<param name="mime"> To override the detected <see cref="P:Jakar.Extensions.LocalFile.Mime" /> , provide a non-null value </param>
			<returns> </returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Clone(Jakar.Extensions.LocalFile,System.Threading.CancellationToken)">
			<summary> Copies this file to the <paramref name="newFile" /> </summary>
			<param name="newFile"> </param>
			<param name="token"> </param>
			<returns> </returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Decrypt">
			<summary> Decrypts a file that was encrypted by the current account using the <see cref="M:System.IO.File.Encrypt(System.String)" /> method. </summary>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Encrypt">
			<summary> Encrypts the file so that only the account used to encrypt the file can decrypt it. </summary>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Delete">
			<summary> Permanently deletes a file. </summary>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Move(System.String)">
			<summary> Moves this file to the new <paramref name="path" /> </summary>
			<param name="path"> </param>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Move(Jakar.Extensions.LocalFile)">
			<summary> Moves this file to the new <paramref name="file" /> location </summary>
			<param name="file"> </param>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Write(System.Text.StringBuilder)">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<returns>
				<see cref="TValue:System.Threading.Tasks.ValueTask" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Write(Jakar.Extensions.ValueStringBuilder)">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<returns>
				<see cref="TValue:System.Threading.Tasks.ValueTask" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Write(System.String)">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<returns>
				<see cref="TValue:System.Threading.Tasks.ValueTask" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Write(System.Byte[])">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<returns>
				<see cref="TValue:System.Threading.Tasks.ValueTask" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Write(System.Span{System.Byte})">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<returns>
				<see cref="TValue:System.Threading.Tasks.ValueTask" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Write(System.ReadOnlySpan{System.Byte})">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<returns>
				<see cref="TValue:System.Threading.Tasks.ValueTask" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Write(System.ReadOnlyMemory{System.Byte})">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<returns>
				<see cref="TValue:System.Threading.Tasks.ValueTask" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Write(System.ReadOnlyMemory{System.Char})">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<returns>
				<see cref="TValue:System.Threading.Tasks.ValueTask" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.Write(System.IO.Stream)">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<returns>
				<see cref="TValue:System.Threading.Tasks.ValueTask" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.WriteAsync(System.Text.StringBuilder)">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<returns>
				<see cref="TValue:System.Threading.Tasks.ValueTask" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.WriteAsync(Jakar.Extensions.ValueStringBuilder)">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<returns>
				<see cref="TValue:System.Threading.Tasks.ValueTask" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.WriteAsync(System.String)">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<returns>
				<see cref="TValue:System.Threading.Tasks.ValueTask" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.WriteAsync(System.Byte[],System.Threading.CancellationToken)">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<param name="token"> </param>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<returns>
				<see cref="TValue:System.Threading.Tasks.ValueTask" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<param name="token"> </param>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<returns>
				<see cref="TValue:System.Threading.Tasks.ValueTask" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<param name="token"> </param>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<returns>
				<see cref="TValue:System.Threading.Tasks.ValueTask" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.WriteAsync(System.IO.Stream,System.Threading.CancellationToken)">
			<summary> Write the <paramref name="payload" /> to the file. </summary>
			<param name="payload"> the data being written to the file </param>
			<param name="token"> </param>
			<exception cref="TValue:System.NullReferenceException"> </exception>
			<exception cref="TValue:System.ArgumentException"> </exception>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> </exception>
			<returns>
				<see cref="TValue:System.Threading.Tasks.ValueTask" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.IAsyncReadHandler.AsBytes(System.Threading.CancellationToken)">
			<summary> Reads the contents of the file as a byte array. </summary>
			<exception cref="TValue:System.NullReferenceException"> if FullPath is null or empty </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> if file is not found </exception>
			<returns>
				<see cref="!:byte[]" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.IAsyncReadHandler.AsMemory(System.Threading.CancellationToken)">
			<summary> Reads the contents of the file as a <see cref="!:ReadOnlyMemory&lt;byte&gt;" /> , asynchronously. </summary>
			<param name="token"> </param>
			<exception cref="TValue:System.NullReferenceException"> if FullPath is null or empty </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> if file is not found </exception>
			<returns>
				<see cref="!:ReadOnlyMemory&lt;byte&gt;" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.IAsyncReadHandler.AsString(System.Threading.CancellationToken)">
			<summary> Reads the contents of the file as a <see cref="TValue:System.String" /> , asynchronously. </summary>
			<exception cref="TValue:System.NullReferenceException"> if FullPath is null or empty </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> if file is not found </exception>
			<returns>
				<see cref="TValue:System.String" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.IAsyncReadHandler.AsJson``1">
			<summary> Reads the contents of the file as a <see cref="TValue:System.String" /> , then calls <see cref="M:Jakar.Extensions.JsonNet.FromJson(System.String)" /> on it, asynchronously. </summary>
			<typeparam name="TValue"> </typeparam>
			<exception cref="TValue:System.NullReferenceException"> if FullPath is null or empty </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> if file is not found </exception>
			<exception cref="TValue:Newtonsoft.Json.JsonReaderException"> if an error  deserialization occurs </exception>
			<returns>
				<typeparamref name="TValue" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.IReadHandler.AsBytes">
			<summary> Reads the contents of the file as a byte array. </summary>
			<exception cref="TValue:System.NullReferenceException"> if FullPath is null or empty </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> if file is not found </exception>
			<returns>
				<see cref="!:byte[]" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.IReadHandler.AsMemory">
			<summary> Reads the contents of the file as a <see cref="!:ReadOnlyMemory&lt;byte&gt;" /> . </summary>
			<exception cref="TValue:System.NullReferenceException"> if FullPath is null or empty </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> if file is not found </exception>
			<returns>
				<see cref="!:ReadOnlyMemory&lt;byte&gt;" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.IReadHandler.AsSpan">
			<summary> Reads the contents of the file as a <see cref="!:ReadOnlySpan&lt;byte&gt;" /> . </summary>
			<exception cref="TValue:System.NullReferenceException"> if FullPath is null or empty </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> if file is not found </exception>
			<returns>
				<see cref="!:ReadOnlySpan&lt;byte&gt;" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.IReadHandler.AsString">
			<summary> Reads the contents of the file as a <see cref="TValue:System.String" /> . </summary>
			<exception cref="TValue:System.NullReferenceException"> if FullPath is null or empty </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> if file is not found </exception>
			'
			<returns>
				<see cref="TValue:System.String" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.IReadHandler.AsJson``1">
			<summary> Reads the contents of the file as a <see cref="TValue:System.String" /> . </summary>
			<exception cref="TValue:System.NullReferenceException"> if FullPath is null or empty </exception>
			<exception cref="TValue:System.IO.FileNotFoundException"> if file is not found </exception>
			<returns>
				<see cref="TValue:System.String" />
			</returns>
		</member>
		<member name="TValue:Jakar.Extensions.LocalFile.Watcher">
			<summary> A collection of files that are  the <see cref="TValue:Jakar.Extensions.LocalDirectory" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.HashAsync_MD5">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.MD5" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.HashAsync_SHA1">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA1" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.HashAsync_SHA256">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA256" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.HashAsync_SHA384">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA384" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.LocalFile.HashAsync_SHA512">
			<summary> Calculates a file hash using <see cref="TValue:System.Security.Cryptography.SHA512" /> </summary>
		</member>
		<member name="M:Jakar.Extensions.PathExtensions.GetExtension(System.String)">
			<summary> extension method for <see cref="M:System.IO.Path.GetExtension(System.String)" /> </summary>
			<param name="path"> </param>
			<returns> </returns>
		</member>
		<member name="M:Jakar.Extensions.PathExtensions.GetFileName(System.String)">
			<summary> extension method for <see cref="M:System.IO.Path.GetFileName(System.String)" /> </summary>
			<param name="path"> </param>
			<returns> </returns>
		</member>
		<member name="M:Jakar.Extensions.PathExtensions.GetFileNameWithoutExtension(System.String)">
			<summary> extension method for <see cref="M:System.IO.Path.GetFileNameWithoutExtension(System.String)" /> </summary>
			<param name="path"> </param>
			<returns> </returns>
		</member>
		<member name="TValue:Jakar.Extensions.MimeTypeNames">
			<summary>
				<para>
					<seealso href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types" />
				</para>
				<para>
					<seealso href="https://www.freeformatter.com/mime-types-list.html" />
				</para>
			</summary>
		</member>
		<member name="M:Jakar.Extensions.MimeTypes.FromExtension(System.String)">
			<summary> Gets the <see cref="TValue:Jakar.Extensions.MimeType" /> of the provided extension <see cref="TValue:System.String" /> . </summary>
			<param name="mime"> </param>
			<returns>
				<see cref="TValue:Jakar.Extensions.MimeType" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.MimeTypes.FromExtension(System.ReadOnlySpan{System.Char})">
			<summary> Gets the <see cref="TValue:Jakar.Extensions.MimeType" /> of the provided extension <see cref="TValue:System.String" /> . </summary>
			<param name="mime"> </param>
			<returns>
				<see cref="TValue:Jakar.Extensions.MimeType" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.MimeTypes.ToMimeType(System.String)">
			<summary>
				Converts the provided ContentType <see cref="TValue:System.String" /> to it's associated <see cref="TValue:Jakar.Extensions.MimeType" /> via
				<seealso cref="TValue:Jakar.Extensions.MimeTypeNames" />
			</summary>
			<param name="mime"> </param>
			<returns>
				<see cref="TValue:Jakar.Extensions.MimeType" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.MimeTypes.ToContentType(Jakar.Extensions.MimeType)">
			<summary> Converts the provided <see cref="TValue:Jakar.Extensions.MimeType" /> to it's associated ContentType via <seealso cref="TValue:Jakar.Extensions.MimeTypeNames" /> </summary>
			<param name="mime"> </param>
			<returns>
				<see cref="TValue:System.String" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.MimeTypes.ToExtensionWithPeriod(Jakar.Extensions.MimeType)">
			<summary> Gets the extension of the provided <see cref="TValue:Jakar.Extensions.MimeType" /> . </summary>
			<param name="mime"> </param>
			<returns>
				<see cref="TValue:System.String" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.MimeTypes.ToExtension(Jakar.Extensions.MimeType)">
			<summary> Gets the extension of the provided <see cref="TValue:Jakar.Extensions.MimeType" /> . </summary>
			<param name="mime"> </param>
			<returns>
				<see cref="TValue:System.String" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.MimeTypes.ToFileName(Jakar.Extensions.MimeType,System.String)">
			<summary> Uses the provided <paramref name="fileName" /> and adds the extension based on provided <see cref="TValue:Jakar.Extensions.MimeType" /> . </summary>
			<param name="mime"> </param>
			<param name="fileName"> </param>
			<returns>
				<see cref="TValue:System.String" />
			</returns>
		</member>
		<member name="M:Jakar.Extensions.MimeTypes.ToUriScheme(Jakar.Extensions.MimeType)">
			<summary>
				<seealso href="https://docs.microsoft.com/en-us/office/client-developer/office-uri-schemes" />
			</summary>
			<param name="mime"> </param>
			<returns>
				<see cref="TValue:System.String" />
			</returns>
		</member>
		<member name="TValue:Jakar.Extensions.Status">
			<summary>
				<para>
					<see href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status" />
				</para>
				<para>
					<see href="https://stackoverflow.com/a/46361806/9530917" />
				</para>
			</summary>
		</member>
		<member name="F:Jakar.Extensions.Status.Continue">
			<summary> This interim response indicates that everything so far is OK and that the client should continue the request, or ignore the response if the request is already finished. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.SwitchingProtocols">
			<summary> This code is sent in response to an Upgrade request header from the client, and indicates the protocol the server is switching to. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.Processing">
			<summary> This code indicates that the server has received and is processing the request, but no response is available yet. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.EarlyHints">
			<summary> This status code is primarily intended to be used with the Link header, letting the user agent start preloading resources while the server prepares a response. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.Ok">
			<summary> The request has succeeded. The meaning of the success depends on the HTTP method: GET: The resource has been fetched and is transmitted in the message body. HEAD: The entity headers are in the message body. PUT or POST: The resource describing the result of the action is transmitted in the message body. TRACE: The message body contains the request message as received by the server. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.Created">
			<summary> The request has succeeded and a new resource has been created as a result. This is typically the response sent after POST requests, or some PUT requests. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.Accepted">
			<summary> The request has been received but not yet acted upon. It is noncommittal, since there is no way in HTTP to later send an asynchronous response indicating the outcome of the request. It is intended for cases where another process or server handles the request, or for batch processing. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.NonAuthoritativeInformation">
			<summary> This response code means the returned meta-information is not exactly the same as is available from the origin server, but is collected from a local or a third-party copy. This is mostly used for mirrors or backups of another resource. Except for that specific case, the "200 OK" response is preferred to this status. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.NoContent">
			<summary> There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.ResetContent">
			<summary> Tells the user-agent to reset the document which sent this request. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.PartialContent">
			<summary> This response code is used when the Range header is sent from the client to request only part of a resource. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.MultiStatus">
			<summary> Conveys information about multiple resources, for situations where multiple status codes might be appropriate. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.AlreadyReported">
			<summary> Used inside a dav:propstat response element to avoid repeatedly enumerating the internal members of multiple bindings to the same collection. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.ImUsed">
			<summary> The server has fulfilled a GET request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.Ambiguous">
			<summary> The request has more than one possible response. The user-agent or user should choose one of them. (There is no standardized way of choosing one of the responses, but HTML links to the possibilities are recommended so the user can pick.) </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.MultipleChoices">
			<summary> The request has more than one possible response. The user-agent or user should choose one of them. (There is no standardized way of choosing one of the responses, but HTML links to the possibilities are recommended so the user can pick.) </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.Moved">
			<summary> The URL of the requested resource has been changed permanently. The new URL is given in the response. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.MovedPermanently">
			<summary> The URL of the requested resource has been changed permanently. The new URL is given in the response. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.Found">
			<summary> This response code means that the URI of requested resource has been changed temporarily. Further changes in the URI might be made in the future. Therefore, this same URI should be used by the client in future requests. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.Redirect">
			<summary> The server sent this response to direct the client to get the requested resource at another URI with a GET request. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.RedirectMethod">
			<summary> This is used for caching purposes. It tells the client that the response has not been modified, so the client can continue to use the same cached version of the response. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.SeeOther">
			<summary> This is used for caching purposes. It tells the client that the response has not been modified, so the client can continue to use the same cached version of the response. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.NotModified">
			<summary> This is used for caching purposes. It tells the client that the response has not been modified, so the client can continue to use the same cached version of the response. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.UseProxy">
			<summary> Defined in a previous version of the HTTP specification to indicate that a requested response must be accessed by a proxy. It has been deprecated due to security concerns regarding in-band configuration of a proxy. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.Unused">
			<summary> This response code is no longer used; it is just reserved. It was used in a previous version of the HTTP/1.1 specification. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.RedirectKeepVerb">
			<summary> The server sends this response to direct the client to get the requested resource at another URI with same method that was used in the prior request. This has the same semantics as the 302 Found HTTP response code, with the exception that the user agent must not change the HTTP method used: If a POST was used in the first request, a POST must be used in the second request. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.TemporaryRedirect">
			<summary> The server sends this response to direct the client to get the requested resource at another URI with same method that was used in the prior request. This has the same semantics as the 302 Found HTTP response code, with the exception that the user agent must not change the HTTP method used: If a POST was used in the first request, a POST must be used in the second request. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.PermanentRedirect">
			<summary> This means that the resource is now permanently located at another URI, specified by the Location: HTTP Response header. This has the same semantics as the 301 Moved Permanently HTTP response code, with the exception that the user agent must not change the HTTP method used: If a POST was used in the first request, a POST must be used in the second request. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.BadRequest">
			<summary> The server could not understand the request due to invalid syntax. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.Unauthorized">
			<summary> Although the HTTP standard specifies "unauthorized", semantically this response means "unauthenticated". That is, the client must authenticate itself to get the requested response. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.PaymentRequired">
			<summary> This response code is reserved for future use. The initial aim for creating this code was using it for digital payment systems, however this status code is used very rarely and no standard convention exists. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.Forbidden">
			<summary> The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401, the client's identity is known to the server. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.NotFound">
			<summary> The server can not find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurrence on the web. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.MethodNotAllowed">
			<summary> The request method is known by the server but has been disabled and cannot be used. For example, an API may forbid DELETE-ing a resource. The two mandatory methods, GET and HEAD, must never be disabled and should not return this error code. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.NotAcceptable">
			<summary> This response is sent when the web server, after performing server-driven content negotiation, doesn't find any content that conforms to the criteria given by the user agent. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.ProxyAuthenticationRequired">
			<summary> This is similar to 401 but authentication is needed to be done by a proxy. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.RequestTimeout">
			<summary> This response is sent on an idle connection by some servers, even without any previous request by the client. It means that the server would like to shut down this unused connection. This response is used much more since some browsers, like Chrome, Firefox 27+, or IE9, use HTTP pre-connection mechanisms to speed up surfing. Also note that some servers merely shut down the connection without sending this message. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.Conflict">
			<summary> This response is sent when a request conflicts with the current state of the server. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.Gone">
			<summary> This response is sent when the requested content has been permanently deleted from server, with no forwarding address. Clients are expected to remove their caches and links to the resource. The HTTP specification intends this status code to be used for "limited-time, promotional services". APIs should not feel compelled to indicate resources that have been deleted with this status code. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.LengthRequired">
			<summary> Server rejected the request because the Content-Length header field is not defined and the server requires it. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.PreconditionFailed">
			<summary> The client has indicated preconditions in its headers which the server does not meet. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.RequestEntityTooLarge">
			<summary> Request entity is larger than limits defined by server; the server might close the connection or return an Retry-After header field. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.RequestUriTooLong">
			<summary> The URI requested by the client is longer than the server is willing to interpret. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.UnsupportedMediaType">
			<summary> The media format of the requested data is not supported by the server, so the server is rejecting the request. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.RequestedRangeNotSatisfiable">
			<summary> The range specified by the Range header field in the request can't be fulfilled; it's possible that the range is outside the size of the target URI's data. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.ExpectationFailed">
			<summary> This response code means the expectation indicated by the Expect request header field can't be met by the server. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.Teapot">
			<summary> The server refuses the attempt to brew coffee with a teapot. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.MisdirectedRequest">
			<summary> The request was directed at a server that is not able to produce a response. This can be sent by a server that is not configured to produce responses for the combination of scheme and authority that are included in the request URI. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.UnprocessableEntity">
			<summary> The request was well-formed but was unable to be followed due to semantic errors. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.Locked">
			<summary> The resource that is being accessed is locked. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.FailedDependency">
			<summary> The request failed due to failure of a previous request. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.TooEarly">
			<summary> Indicates that the server is unwilling to risk processing a request that might be replayed. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.UpgradeRequired">
			<summary> The server refuses to perform the request using the current protocol but might be willing to do so after the client upgrades to a different protocol. The server sends an Upgrade header in a 426 response to indicate the required protocol(s). </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.PreconditionRequired">
			<summary> The origin server requires the request to be conditional. This response is intended to prevent the 'lost update' problem, where a client GETs a resource's state, modifies it, and PUTs it back to the server, when meanwhile a third party has modified the state on the server, leading to a conflict. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.TooManyRequests">
			<summary> The user has sent too many requests in a given amount of time ("rate limiting"). </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.Disabled">
			<summary> The resource that is being accessed is Disabled. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.RequestHeaderFieldsTooLarge">
			<summary> The server is unwilling to process the request because its header fields are too large. The request may be resubmitted after reducing the size of the request header fields. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.AlreadyExists">
			<summary> Item Already Exists. Duplication not allowed. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.NoResponse">
			<summary> Used to indicate that the server has returned no information to the client and closed the connection. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.UnavailableForLegalReasons">
			<summary> The user-agent requested a resource that cannot legally be provided, such as a web page censored by a government. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.SessionExpired">
			<summary> Session Expired </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.ClientClosedRequest">
			<summary> Used when the client has closed the request before the server could send a response. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.InternalServerError">
			<summary> The server has encountered a situation it doesn't know how to handle. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.NotImplemented">
			<summary> The request method is not supported by the server and cannot be handled. The only methods that servers are required to support (and therefore that must not return this code) are GET and HEAD. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.BadGateway">
			<summary> This error response means that the server, while working as a gateway to get a response needed to handle the request, got an invalid response. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.ServiceUnavailable">
			<summary> The server is not ready to handle the request. Common causes are a server that is down for maintenance or that is overloaded. Note that together with this response, a user-friendly page explaining the problem should be sent. This response should be used for temporary conditions and the Retry-After: HTTP header should, if possible, contain the estimated time before the recovery of the service. The webmaster must also take care about the caching-related headers that are sent along with this response, as these temporary condition responses should usually not be cached. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.GatewayTimeout">
			<summary> This error response is given when the server is acting as a gateway and cannot get a response in time. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.HttpVersionNotSupported">
			<summary> The HTTP version used in the request is not supported by the server. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.VariantAlsoNegotiates">
			<summary> The server has an internal configuration error: the chosen variant resource is configured to engage in transparent content negotiation itself, and is therefore not a proper end point in the negotiation process. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.InsufficientStorage">
			<summary> The method could not be performed on the resource because the server is unable to store the representation needed to successfully complete the request. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.LoopDetected">
			<summary> The server detected an infinite loop while processing the request. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.NotExtended">
			<summary> Further extensions to the request are required for the server to fulfill it. </summary>
		</member>
		<member name="F:Jakar.Extensions.Status.NetworkAuthenticationRequired">
			<summary> The 511 status code indicates that the client needs to authenticate to gain network access. </summary>
		</member>
		<member name="TValue:Jakar.Extensions.WebRequester">
			<summary>
				<para>
					<see href="https://www.stevejgordon.co.uk/httpclient-connection-pooling--dotnet-core" />
				</para>
			</summary>
		</member>
		<member name="M:Jakar.Extensions.WebResponse`1.GetPayload">
			<summary> Gets the payload if available; otherwise throws. </summary>
			<exception cref="TValue:System.Net.Http.HttpRequestException"> </exception>
		</member>
		<member name="M:Jakar.Extensions.IniConfig.GetOrAdd(System.String)">
			<summary> Gets the <see cref="TValue:Jakar.Extensions.IniConfig.Section" /> with the <paramref name="sectionName" /> . If it doesn't exist, it is created, then returned. </summary>
			<param name="sectionName"> Section AppName </param>
			<returns>
				<see cref="TValue:Jakar.Extensions.IniConfig.Section" />
			</returns>
		</member>
		<member name="P:Jakar.Extensions.IErrorDetails.Type">
			<summary>
				A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when
				dereferenced, it provides human-readable documentation for the problem type
				(e.g., using HTML [W3C.REC-html5-20141028]). When this member is not present, its value is assumed to be
				"about:blank".
			</summary>
		</member>
		<member name="P:Jakar.Extensions.IErrorDetails.Title">
			<summary>
				A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence
				of the problem, except for purposes of localization(e.g., using proactive content negotiation;
				see[RFC7231], Section 3.4).
			</summary>
		</member>
		<member name="P:Jakar.Extensions.IErrorDetails.StatusCode">
			<summary>
				The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
			</summary>
		</member>
		<member name="P:Jakar.Extensions.IErrorDetails.Detail">
			<summary>
				A human-readable explanation specific to this occurrence of the problem.
			</summary>
		</member>
		<member name="P:Jakar.Extensions.IErrorDetails.Instance">
			<summary>
				A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
			</summary>
		</member>
		<member name="TValue:Jakar.Extensions.AsyncLinq">
			<summary>
				<para>
					<see cref="TValue:System.Linq.Enumerable" />
				</para>
				<para> AsyncEnumerable </para>
				<para>
					<seealso href="https://gist.github.com/scattered-code/b834bbc355a9ee710e3147321d6f985a" />
				</para>
				<para> Also a debugging improvement: <see href="https://youtu.be/gW19LaAYczI?t=497" /> </para>
			</summary>
		</member>
		<member name="M:Jakar.Extensions.AsyncLinq.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
			<summary> If <paramref name="source" /> is an <see cref="TValue:System.Collections.Generic.List`1" /> , items should not be added or removed while the calling. </summary>
			<typeparam name="TElement"> </typeparam>
		</member>
		<member name="TValue:Jakar.Extensions.AppVersion">
			<summary> See <see cref="TValue:Jakar.Extensions.AppVersionFormat" /> for formatting details. </summary>
		</member>
		<member name="M:Jakar.Extensions.AppVersion.TryParse(System.ReadOnlySpan{System.Char},Jakar.Extensions.AppVersion@)">
			<summary> </summary>
			<param name="value"> </param>
			<param name="version"> </param>
			<returns> <see langword="true" /> Parse was successful. <br /> <see langword="false" /> otherwise. </returns>
		</member>
		<member name="M:Jakar.Extensions.AppVersion.ToVersion">
			<summary>
				If the <see cref="P:Jakar.Extensions.AppVersion.Scheme" /> is any of [ <see cref="F:Jakar.Extensions.AppVersionFormat.Singular" /> ,
				<see cref="F:Jakar.Extensions.AppVersionFormat.DetailedRevisions" /> , <see cref="F:Jakar.Extensions.AppVersionFormat.Complete" /> ], will throw
				<see cref="TValue:System.InvalidOperationException" />
			</summary>
			<returns> </returns>
			<exception cref="TValue:System.InvalidOperationException"> </exception>
		</member>
		<member name="M:Jakar.Extensions.AppVersion.CompareTo(System.Object)">
			<summary> Compares two <see cref="TValue:Jakar.Extensions.AppVersion" /> instances </summary>
			<param name="other"> </param>
			<returns>
				<see langword="0" /> if the <paramref name="other" /> is equivalent. <br /> <see langword="NOT_FOUND" /> if the <paramref name="other" /> is smaller. <br /> <see langword="1" /> if the
				<paramref name="other" />
				is greater. <br />
				<see langword="-2" />
				if the
				<paramref name="other" />
				is not an instance of
				<see cref="TValue:Jakar.Extensions.AppVersion" />
				. <br />
			</returns>
			<exception cref="TValue:System.ArgumentException"> If something goes wrong, and the <paramref name="other" /> is not comparable. </exception>
		</member>
		<member name="M:Jakar.Extensions.AppVersion.FuzzyEquals(Jakar.Extensions.AppVersion)">
			<summary> Compares two <see cref="TValue:Jakar.Extensions.AppVersion" /> instances for relative equality. </summary>
			<param name="other"> </param>
			<returns>
				<para>
					returns <see langword="true" /> if all of the following is true:
					<list type="number">
						<span> If <see cref="P:Jakar.Extensions.AppVersion.Major" /> and <see cref="P:Jakar.Extensions.AppVersion.Minor" /> match </span> <br />
						<span>
							All other fields that are not <see langword="null" /> and are equal to or greater than <br />
							<list type="bullet">
								<span>
									<see cref="P:Jakar.Extensions.AppVersion.Maintenance" />
								</span>
								<br />
								<span>
									<see cref="P:Jakar.Extensions.AppVersion.MajorRevision" />
								</span>
								<br />
								<span>
									<see cref="P:Jakar.Extensions.AppVersion.MinorRevision" />
								</span>
								<br />
								<span>
									<see cref="P:Jakar.Extensions.AppVersion.Build" />
								</span>
								<br />
							</list>
						</span>
						<br />
					</list>
				</para>
				<para> otherwise <see langword="false" /> </para>
			</returns>
			<exception cref="TValue:System.ArgumentException"> If something goes wrong, and the <paramref name="other" /> is not comparable. </exception>
		</member>
		<member name="F:Jakar.Extensions.AppVersionFormat.Singular">
			<summary> Major </summary>
		</member>
		<member name="F:Jakar.Extensions.AppVersionFormat.Minimal">
			<summary> Major.Minor </summary>
		</member>
		<member name="F:Jakar.Extensions.AppVersionFormat.Typical">
			<summary> Major.Minor.Build </summary>
		</member>
		<member name="F:Jakar.Extensions.AppVersionFormat.Detailed">
			<summary> Major.Minor.Maintenance.Build </summary>
		</member>
		<member name="F:Jakar.Extensions.AppVersionFormat.DetailedRevisions">
			<summary> Major.Minor.Maintenance.MajorRevision.Build </summary>
		</member>
		<member name="F:Jakar.Extensions.AppVersionFormat.Complete">
			<summary> Major.Minor.Maintenance.MajorRevision.MinorRevision.Build </summary>
		</member>
		<member name="TValue:Jakar.Extensions.NullScope">
			<summary> An empty scope without any logic </summary>
		</member>
		<member name="M:Jakar.Extensions.NullScope.Dispose">
			<inheritdoc />
		</member>
		<member name="TValue:Jakar.Extensions.Randoms">
			<summary>
				<see href="https://www.educative.io/edpresso/how-to-generate-a-random-string--c-sharp" />
			</summary>
		</member>
		<member name="TValue:Jakar.Extensions.Synchronized`1">
			<summary>
				<seealso href="https://www.codeproject.com/Articles/33559/Handy-wrapper-class-for-thread-safe-property-acces" />
			</summary>
			<typeparam name="TValue"> The value type. </typeparam>
		</member>
		<member name="M:Jakar.Extensions.Synchronized`1.#ctor(`0)">
			<summary>
				<seealso href="https://www.codeproject.com/Articles/33559/Handy-wrapper-class-for-thread-safe-property-acces" />
			</summary>
			<typeparam name="TValue"> The value type. </typeparam>
		</member>
		<member name="TValue:Jakar.Extensions.SessionToken">
			<summary> The SecurityToken created by JwtSecurityTokenHandler.CreateToken </summary>
		</member>
		<member name="M:Jakar.Extensions.SessionToken.#ctor(System.Guid,System.String,Jakar.Extensions.AppVersion,System.String,System.String)">
			<summary> The SecurityToken created by JwtSecurityTokenHandler.CreateToken </summary>
		</member>
		<member name="TValue:Jakar.Extensions.SessionToken`1">
			<summary> The SecurityToken created by JwtSecurityTokenHandler.CreateToken </summary>
		</member>
		<member name="M:Jakar.Extensions.SessionToken`1.#ctor(System.Guid,System.String,Jakar.Extensions.AppVersion,System.String,System.String,System.Guid,`0)">
			<summary> The SecurityToken created by JwtSecurityTokenHandler.CreateToken </summary>
		</member>
		<member name="TValue:Jakar.Extensions.ValidValueOf`2">
			<summary> Inspired by <see cref="TValue:ValueOf.ValueOf`2" /> </summary>
			<typeparam name="TValue"> </typeparam>
			<typeparam name="TThis"> </typeparam>
		</member>
		<member name="M:Jakar.Extensions.ValidValueOf`2.IsValid">
			<summary> </summary>
			<returns> <see langword="true" /> if <see cref="P:Jakar.Extensions.ValidValueOf`2.Value" /> is valid, otherwise <see langword="false" /> </returns>
		</member>
		<member name="TValue:Jakar.Extensions.AppPreferenceExtensions.ShareKeyCollection">
			<summary> A collection of sharedName -> key -> $"{sharedName}.{key}". </summary>
		</member>
		<member name="TValue:Jakar.Extensions.LineSplitEntry`1">
			<summary>
				<para>
					<see href="https://www.meziantou.net/split-a-string-into-lines-without-allocation.htm" />
				</para>
			</summary>
		</member>
		<member name="M:Jakar.Extensions.LineSplitEntry`1.#ctor(System.ReadOnlySpan{`0}@,Jakar.Extensions.ParamsArray{`0}@)">
			<summary>
				<para>
					<see href="https://www.meziantou.net/split-a-string-into-lines-without-allocation.htm" />
				</para>
			</summary>
		</member>
		<member name="TValue:Jakar.Extensions.ParamsArray`1">
			<summary>
				<para> Based on System.ParamsArray </para>
			</summary>
		</member>
		<member name="M:Jakar.Extensions.ParamsArray`1.#ctor(System.Buffers.IMemoryOwner{`0},System.Int32)">
			<summary>
				<para> Based on System.ParamsArray </para>
			</summary>
		</member>
		<member name="TValue:Jakar.Extensions.SpanEnumerator`1">
			<summary> A <see langword="ref" /> <see langword="struct" /> that enumerates the items in a given <see cref="TValue:System.Span`1" /> instance. </summary>
			<typeparam name="TValue"> The type of items to enumerate. </typeparam>
			<remarks> Initializes a new instance of the <see cref="TValue:Jakar.Extensions.SpanEnumerator`1" /> struct. </remarks>
			<param name="span"> The source <see cref="TValue:System.Span`1" /> instance. </param>
		</member>
		<member name="M:Jakar.Extensions.SpanEnumerator`1.#ctor(System.ReadOnlySpan{`0}@)">
			<summary> A <see langword="ref" /> <see langword="struct" /> that enumerates the items in a given <see cref="TValue:System.Span`1" /> instance. </summary>
			<typeparam name="TValue"> The type of items to enumerate. </typeparam>
			<remarks> Initializes a new instance of the <see cref="TValue:Jakar.Extensions.SpanEnumerator`1" /> struct. </remarks>
			<param name="span"> The source <see cref="TValue:System.Span`1" /> instance. </param>
		</member>
		<member name="TValue:Jakar.Extensions.SpanEnumerator`1.Item">
			<summary> An item from a source <see cref="TValue:System.Span`1" /> instance. </summary>
			<remarks> Initializes a new instance of the <see cref="TValue:Jakar.Extensions.SpanEnumerator`1.Item" /> struct. </remarks>
			<param name="span"> The source <see cref="TValue:System.Span`1" /> instance. </param>
			<param name="index"> The current index within <paramref name="span" /> . </param>
		</member>
		<member name="M:Jakar.Extensions.SpanEnumerator`1.Item.#ctor(System.ReadOnlySpan{`0}@,System.Int32)">
			<summary> An item from a source <see cref="TValue:System.Span`1" /> instance. </summary>
			<remarks> Initializes a new instance of the <see cref="TValue:Jakar.Extensions.SpanEnumerator`1.Item" /> struct. </remarks>
			<param name="span"> The source <see cref="TValue:System.Span`1" /> instance. </param>
			<param name="index"> The current index within <paramref name="span" /> . </param>
		</member>
		<member name="TValue:Jakar.Extensions.Spans">
			<summary>
				<para>
					<see href="https://devblogs.microsoft.com/dotnet/performance_improvements_in_net_7/#vectorization" />
				</para>
			</summary>
		</member>
		<member name="TValue:Jakar.Extensions.SpanSplitEnumerator`1">
			<summary>
				<see cref="TValue:Jakar.Extensions.SpanSplitEnumerator`1" /> is a struct so there is no allocation here.
				<para> Must be a ref struct as it contains a <see cref="TValue:System.ReadOnlySpan`1" /> </para>
				<para>
					<see href="https://www.meziantou.net/split-a-string-into-lines-without-allocation.htm" />
				</para>
			</summary>
		</member>
		<member name="TValue:Jakar.Extensions.ValueStringBuilder">
			<summary>
				<para> Based on System.Text.ValueStringBuilder </para>
			</summary>
		</member>
		<member name="M:Jakar.Extensions.ValueStringBuilder.GetPinnableReference">
			<summary> Get a pinnable reference to the builder. Does not ensure there is a null char after <see cref="P:Jakar.Extensions.ValueStringBuilder.Length" /> . This overload is pattern matched  the C# 7.3+ compiler so you can omit the explicit method call, and write eg "fixed (char* c = builder)" </summary>
		</member>
		<member name="M:Jakar.Extensions.ValueStringBuilder.GetPinnableReference(System.Boolean)">
			<summary> Get a pinnable reference to the builder. </summary>
			<param name="terminate"> Ensures that the builder has a null char after <see cref="P:Jakar.Extensions.ValueStringBuilder.Length" /> </param>
		</member>
		<member name="M:Jakar.Extensions.ValueStringBuilder.GetPinnableReference(System.Char)">
			<summary> Get a pinnable reference to the builder. </summary>
			<param name="terminate"> Ensures that the builder has a null char after <see cref="P:Jakar.Extensions.ValueStringBuilder.Length" /> </param>
		</member>
		<member name="M:Jakar.Extensions.ValueStringBuilder.AppendFormatHelper``1(System.IFormatProvider,System.ReadOnlySpan{System.Char},System.ReadOnlySpan{``0})">
			<summary> Copied from StringBuilder, can't be done via generic extension as ValueStringBuilder is a ref struct and cannot be used a generic. </summary>
			<param name="provider"> </param>
			<param name="format"> </param>
			<param name="args"> </param>
			<returns> </returns>
			<exception cref="TValue:System.ArgumentNullException"> </exception>
			<exception cref="TValue:System.FormatException"> </exception>
		</member>
		<member name="M:Jakar.Extensions.TypeNameComparer.Compare(System.Type,System.Type)">
			<summary>
				<para>
					Comparing by <see cref="P:System.Type.AssemblyQualifiedName" /> would give the same result, but it performs a hidden concatenation (and therefore string allocation) of
					<see cref="P:System.Type.FullName" /> and
					<see cref="P:System.Type.Assembly" />
					with its
					<see cref="P:System.Reflection.Assembly.FullName" />
					.
				</para>
				We can avoid this overhead by comparing the two properties separately.
			</summary>
			<param name="x"> </param>
			<param name="y"> </param>
			<returns> </returns>
		</member>
		<member name="TValue:Jakar.Extensions.Types">
			<summary>
				<para>
					<see href="https://github.com/dotnet/roslyn/blob/main/docs/features/nullable-metadata.md" />
				</para>
				<para>
					<see href="https://stackoverflow.com/a/58454489/9530917" />
				</para>
				<para>
					<see href="https://github.com/RicoSuter/Namotion.Reflection" />
				</para>
			</summary>
		</member>
		<member name="P:Jakar.Extensions.IUserRecord`1.ConcurrencyStamp">
			<summary> A random value that must change whenever a user is persisted to the store </summary>
		</member>
		<member name="P:Jakar.Extensions.IUserDevice`1.IP">
			<summary> Last known <see cref="TValue:System.Net.IPAddress" /> </summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Address_0">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the Address method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Address_0.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Address_0.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Address_0.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Address_0.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Address_0.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Address_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Address_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Address_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.DateOnly_1">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the DateOnly method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.DateOnly_1.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.DateOnly_1.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.DateOnly_1.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.DateOnly_1.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.DateOnly_1.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.DateOnly_1.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.DateOnly_1.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.DateOnly_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.DateTimeOffset_2">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the DateTimeOffset method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.DateTimeOffset_2.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.DateTimeOffset_2.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.DateTimeOffset_2.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.DateTimeOffset_2.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.DateTimeOffset_2.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.DateTimeOffset_2.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.DateTimeOffset_2.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.DateTimeOffset_2.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Email_3">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the Email method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Email_3.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Email_3.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Email_3.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Email_3.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Email_3.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Email_3.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Email_3.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Email_3.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Ip_4">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the Ip method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Ip_4.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Ip_4.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Ip_4.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Ip_4.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Ip_4.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Ip_4.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Ip_4.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Ip_4.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.IpV6_5">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the IpV6 method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.IpV6_5.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.IpV6_5.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.IpV6_5.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.IpV6_5.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.IpV6_5.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.IpV6_5.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.IpV6_5.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.IpV6_5.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Url_6">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the Url method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Url_6.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Url_6.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Url_6.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Url_6.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Url_6.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Url_6.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Url_6.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Url_6.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Brazil_7">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the Brazil method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Brazil_7.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Brazil_7.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Brazil_7.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Brazil_7.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Brazil_7.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Brazil_7.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Brazil_7.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Brazil_7.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.China1_8">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the China1 method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.China1_8.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.China1_8.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.China1_8.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.China1_8.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.China1_8.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.China1_8.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.China1_8.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.China1_8.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.China2_9">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the China2 method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.China2_9.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.China2_9.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.China2_9.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.China2_9.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.China2_9.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.China2_9.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.China2_9.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.China2_9.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Generic_10">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the Generic method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Generic_10.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Generic_10.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Generic_10.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Generic_10.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Generic_10.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Generic_10.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Generic_10.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Generic_10.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Germany_11">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the Germany method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Germany_11.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Germany_11.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Germany_11.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Germany_11.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Germany_11.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Germany_11.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Germany_11.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Germany_11.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.India_12">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the India method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.India_12.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.India_12.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.India_12.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.India_12.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.India_12.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.India_12.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.India_12.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.India_12.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Indonesia_13">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the Indonesia method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Indonesia_13.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Indonesia_13.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Indonesia_13.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Indonesia_13.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Indonesia_13.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Indonesia_13.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Indonesia_13.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Indonesia_13.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Japan_14">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the Japan method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Japan_14.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Japan_14.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Japan_14.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Japan_14.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Japan_14.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Japan_14.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Japan_14.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Japan_14.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Russia_15">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the Russia method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Russia_15.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Russia_15.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Russia_15.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Russia_15.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Russia_15.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Russia_15.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Russia_15.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Russia_15.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.UnitedKingdom_16">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the UnitedKingdom method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.UnitedKingdom_16.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.UnitedKingdom_16.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.UnitedKingdom_16.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.UnitedKingdom_16.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.UnitedKingdom_16.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.UnitedKingdom_16.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.UnitedKingdom_16.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.UnitedKingdom_16.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada1_17">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the UnitedSatesOrCanada1 method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada1_17.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada1_17.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada1_17.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada1_17.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada1_17.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada1_17.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada1_17.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada1_17.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada2_18">
			<summary>Custom <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived type for the UnitedSatesOrCanada2 method.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada2_18.Instance">
			<summary>Cached, thread-safe singleton instance.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada2_18.#ctor">
			<summary>Initializes the instance.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada2_18.RunnerFactory">
			<summary>
				Provides a factory for creating <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> instances to be used by methods on
				<see cref="TValue:System.Text.RegularExpressions.Regex" />.
			</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada2_18.RunnerFactory.CreateInstance">
			<summary>Creates an instance of a <see cref="TValue:System.Text.RegularExpressions.RegexRunner" /> used by methods on <see cref="TValue:System.Text.RegularExpressions.Regex" />.</summary>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada2_18.RunnerFactory.Runner">
			<summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada2_18.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
			<summary>Scan the <paramref name="inputSpan" /> starting from base.runtextstart for the next match.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada2_18.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
			<summary>Search <paramref name="inputSpan" /> starting from base.runtextpos for the next location a match could possibly start.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if a possible match was found; false if no more matches are possible.</returns>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.UnitedSatesOrCanada2_18.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
			<summary>Determine whether <paramref name="inputSpan" /> at base.runtextpos is a match for the regular expression.</summary>
			<param name="inputSpan">The text being scanned by the regular expression.</param>
			<returns>true if the regular expression matches at the current position; otherwise, false.</returns>
		</member>
		<member name="TValue:System.Text.RegularExpressions.Generated.Utilities">
			<summary>Helper methods used by generated <see cref="TValue:System.Text.RegularExpressions.Regex" />-derived implementations.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Utilities.IndexOfNonAsciiOrAny_49CD85532B4B112F232927F87674A53AD51604B79E483FA96CCCD4482940CDA5(System.ReadOnlySpan{System.Char})">
			<summary>Finds the next index of any character that matches a character in the set [+07-9\d].</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Utilities.IndexOfNonAsciiOrAny_D5B8A4773B91CD22F8F6ED99F4F208222FF4BD415C3DE1241E519AD25FCBB28F(System.ReadOnlySpan{System.Char})">
			<summary>Finds the next index of any character that matches a character in the set [(\s\d].</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Utilities.IndexOfNonAsciiOrAny_EF50D5FF9DD06C00B671A3BE381E5B49A436B80C41FC7CBDAFB0693D33479140(System.ReadOnlySpan{System.Char})">
			<summary>Finds the next index of any character that matches a character in the set [1-9\W].</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Utilities.IsBoundary(System.ReadOnlySpan{System.Char},System.Int32)">
			<summary>Determines whether the specified index is a boundary.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Utilities.IsWordChar(System.Char)">
			<summary>Determines whether the character is part of the [\w] set.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Utilities.StackPop(System.Int32[],System.Int32@,System.Int32@,System.Int32@)">
			<summary>Pops 2 values from the backtracking stack.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Utilities.StackPop(System.Int32[],System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
			<summary>Pops 3 values from the backtracking stack.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32)">
			<summary>Pushes 1 value onto the backtracking stack.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32,System.Int32)">
			<summary>Pushes 2 values onto the backtracking stack.</summary>
		</member>
		<member name="M:System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32,System.Int32,System.Int32)">
			<summary>Pushes 3 values onto the backtracking stack.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Utilities.s_ascii_100FEFFFF87FEFFFF07">
			<summary>Supports searching for characters in or not in "0ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Utilities.s_ascii_129FF030000000000000000">
			<summary>Supports searching for characters in or not in " (+-0123456789".</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Utilities.s_ascii_2000200020002">
			<summary>Supports searching for characters in or not in "IYiy".</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Utilities.s_ascii_941000000000000000000">
			<summary>Supports searching for characters in or not in "(+06".</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Utilities.s_ascii_FF077E0000007E000000">
			<summary>Supports searching for characters in or not in "0123456789:ABCDEFabcdef".</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Utilities.s_ascii_FFC1FFFFFEFE00FCFFFFFFFFFFFFFFFF">
			<summary>Supports searching for characters in or not in "\0\u0001\u0002\u0003\u0004\u0005\u0006\a\b\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f!\"#$%&amp;')*+,-./:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007f".</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Utilities.s_ascii_FFFFFFFFFFF700FCFFFFFFFFFFFFFFFF">
			<summary>Supports searching for characters in or not in "\0\u0001\u0002\u0003\u0004\u0005\u0006\a\b\t\n\v\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&amp;'()*,-./:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007f".</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Utilities.s_indexOfAnyStrings_OrdinalIgnoreCase_A731037CDB0D14EBA8E36C93BF1B7D93B66DE7EDBE3F68658EA56F8636DCEAAD">
			<summary>Supports searching for the specified strings.</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Utilities.s_nonAscii_2D5586687DC37F0329E3CA4127326E68B5A3A090B13B7834AEA7BFC4EDDE220F">
			<summary>Supports searching for characters in or not in "-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzK".</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Utilities.s_nonAscii_3C8582B782E52D928F762F68330403BA2573CB93ADE431C76C62F2548D176045">
			<summary>Supports searching for characters in or not in "!#$%&amp;'*+-/0123456789=&gt;?ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz{|}~K".</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Utilities.s_nonAscii_46E3FAA2E94950B9D41E9AB1B570CAB55D04A30009110072B4BC074D57272527">
			<summary>Supports searching for characters in or not in "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzK".</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Utilities.s_nonAscii_67EB1B95D4E294A33C97F2B6CF507CB7EBF4DFFD76937546C018081B2E1E74E2">
			<summary>Supports searching for characters in or not in "!#$%&amp;+,-./0123456789:=?@ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz|~K".</summary>
		</member>
		<member name="F:System.Text.RegularExpressions.Generated.Utilities.s_nonAscii_B6DBA3DB7D28C88389EFB5376DB55BD1354961D23093461EE233A41B6FD2C1E4">
			<summary>Supports searching for characters in or not in "!\"#$%&amp;'*+-/0123456789=&gt;?ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz{|}~K".</summary>
		</member>
	</members>
</doc>
